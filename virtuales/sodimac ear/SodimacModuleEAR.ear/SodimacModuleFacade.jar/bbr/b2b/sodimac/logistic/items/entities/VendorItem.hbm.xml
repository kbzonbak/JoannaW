<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.sodimac.logistic.items.entities.VendorItem" table="VENDORITEM" 
		entity-name="bbr.b2b.sodimac.logistic.items.entities.VendorItem" schema="LOGISTICA" > 
		<composite-id name="id" class="bbr.b2b.sodimac.logistic.items.entities.VendorItemId">
			<key-property name="vendorid" access="field" type="java.lang.Long" column="VENDOR_ID" />
			<key-property name="itemid" access="field" type="java.lang.Long" column="ITEM_ID" />
		</composite-id>
		
		<property name="vendoritemcode" type="java.lang.String"></property>		
		
		<many-to-one name="vendor" 
			class="bbr.b2b.sodimac.logistic.vendors.entities.Vendor" column="VENDOR_ID" 
			not-null="false" insert="false" update="false" />
		<many-to-one name="item" 
			class="bbr.b2b.sodimac.logistic.items.entities.Item" column="ITEM_ID" 
			not-null="false" insert="false" update="false" />
		
		
		<sql-query name="getVendorItemDatasofOrder">
			<![CDATA[               
	        	SELECT DISTINCT 
	        		I.ID,
				  	I.DESCRIPTION,
					COALESCE (VI.VENDORITEMCODE, '') AS VENDORITEMCODE,
					I.SKU,
					I.UPC,
					COALESCE (I.BRAND, '') AS BRAND,
					COALESCE (I.FAMILY, '') AS FAMILY,
					COALESCE (I.DEPARMENT, '') AS DEPARMENT
					from LOGISTICA.ITEM as I 
					join LOGISTICA.VENDORITEM VI on I.ID = VI.ITEM_ID 
					join LOGISTICA.VENDOR V on VI.VENDOR_ID = V.ID
					join LOGISTICA.ORDER O on O.VENDOR_ID = V.ID
					join LOGISTICA.ORDERDETAIL OD on O.ID = OD.ORDER_ID and OD.ITEM_ID = I.ID
					where O.ID = :orderid    
			]]>
		</sql-query>
				
		<sql-query name="getVendorItemDataofOrder">
			<![CDATA[	
				SELECT 
					DISTINCT 
					I.ID,
					I.SKU,
					I.UPC,
					I.DESCRIPTION,
					I.BRAND,
					I.EAN2,
					I.FAMILY,
					I.DEPARMENT,
					VI.VENDORITEMCODE
				FROM 
					LOGISTICA.ITEM AS I JOIN 
					LOGISTICA.VENDORITEM VI ON I.ID = VI.ITEM_ID JOIN 
					LOGISTICA.VENDOR V ON VI.VENDOR_ID = V.ID JOIN 
					LOGISTICA.ORDERDETAIL ODT ON I.ID = ODT.ITEM_ID JOIN 
					LOGISTICA.ORDER O ON ODT.ORDER_ID = O.ID AND V.ID = O.VENDOR_ID
				WHERE 
					(O.ID = :orderid) 
				ORDER BY ID
			]]>
		</sql-query>	
		
	</class>
</hibernate-mapping>
