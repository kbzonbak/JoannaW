<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.falabella.logistic.buyorders.entities.PreDelivery" table="PREDELIVERY" 
		entity-name="bbr.b2b.falabella.logistic.buyorders.entities.PreDelivery" schema="LOGISTICA" > 
		<composite-id name="id" class="bbr.b2b.falabella.logistic.buyorders.entities.PreDeliveryId">
			<key-property name="orderid" access="field" type="java.lang.Long" column="ORDER_ID" />
			<key-property name="itemid" access="field" type="java.lang.Long" column="ITEM_ID" />
			<key-property name="localid" access="field" type="java.lang.Long" column="LOCAL_ID" />
		</composite-id>
		<property name="needunits" type="java.lang.Double"></property>			
		<many-to-one name="orderdetail" not-null="true" insert="false" update="false" 
			class="bbr.b2b.falabella.logistic.buyorders.entities.Orderdetail">
			<column name="ORDER_ID"></column>
			<column name="ITEM_ID"></column>
		</many-to-one>
		<many-to-one name="local" class="bbr.b2b.falabella.logistic.locations.entities.Location" column="LOCAL_ID" not-null="false" insert="false" update="false" />
		
		<sql-query name="getPreDeliveryItemDataofOrder">
			<![CDATA[               
	        	SELECT DISTINCT 
				D.ORDER_ID as orderid,
				I.SKU AS ITEM_SKU,
				D.LOCAL_ID as localid,
				D.ITEM_ID as itemid,
				D.NEEDUNITS,
				L.CODE AS LOCAL_CODE
				from LOGISTICA.PREDELIVERY as D 
				join LOGISTICA.ORDERDETAIL OD on D.ORDER_ID = OD.ORDER_ID and OD.ITEM_ID = D.ITEM_ID
				join LOGISTICA.ITEM I on D.ITEM_ID = I.ID
				join LOGISTICA.LOCATION L on D.LOCAL_ID = L.ID
				where D.ORDER_ID = :orderid    
			]]>
		</sql-query>
		
	</class>
</hibernate-mapping>
