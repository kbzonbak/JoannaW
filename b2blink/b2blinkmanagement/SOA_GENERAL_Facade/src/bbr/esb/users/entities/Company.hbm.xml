<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.esb.users.entities.Company" table="COMPANY" schema="public">
		<id name="id" type="java.lang.Long">
			<column name="ID" />
			<generator class="identity" />
		</id>
		<property name="name" type="java.lang.String" column="NAME" length="128" />
		<property name="rut" type="java.lang.String" column="RUT" length="9" />
		<property name="encrypt" type="java.lang.Boolean" column="ENCRYPT" not-null="true"/>
		<property name="encryptpassword" type="java.lang.String" column="ENC_PWD" length="64" />
		<property name="as2id" type="java.lang.String" column="AS2ID" length="128" not-null="false" />
		
		<property name="clientavaliable" type="java.lang.Boolean" column="CLIENT_AVAILABLE" not-null="false" />
		<property name="monitoreable" type="java.lang.Boolean" column="MONITORABLE"  not-null="false" />
		<property name="lastclientcheck" type="java.util.Date" column="LAST_CLIENTCHECK"  not-null="false" />
		<property name="dafaultmaxdelayendflow" type="java.lang.Integer" column="DEFAULTMAXDELAY_ENDFLOW"  not-null="false" />

		<sql-query name="getCompaniesofUser">
			select distinct 
				   C.ID AS ID, 
				   C.NAME, 
				   C.AS2ID, 
				   C.RUT,
				   C.ENCRYPT,
				   C.ENC_PWD AS ENCRYPTPASSWORD
			from COMPANY C
			join USER_COMPANY UC on UC.COMPANY_ID = C.ID
			join "user" U on UC.USER_ID = U.ID
			where U.ID = :userid 
			order by C.ID
		</sql-query>
		
		<sql-query name="getCompanyrutByAccessAndSitename">
			SELECT 
				C.ID AS ID, 
				C.NAME, 
				   C.AS2ID, 
				   C.RUT,
				   C.ENCRYPT,
				   C.ENC_PWD AS ENCRYPTPASSWORD
			FROM COMPANY AS C		
			join ACCESS AS AC ON C.ID = AC.COMPANY_ID
			join SITE AS SI ON AC.SITE_ID = SI.ID
			WHERE SI.NAME = :sitename AND AC.CODE = :accesscode
		</sql-query>	
	</class>
</hibernate-mapping>
