package bbr.b2b.logistic.utils;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.StandardCopyOption;
import java.util.Vector;

import org.apache.commons.io.IOUtils;

public class SFTPClient {
	private Session session = null;

	private String privateKeyPath;

	public void connect(String user, String password, String server, String port, String originFolder, String destinationFolder) throws JSchException, IOException {
		JSch jsch = new JSch();
		Session session = null;
		try {
			
			session = jsch.getSession(user, server, Integer.valueOf(port));
			session.setConfig("StrictHostKeyChecking", "no");
			session.setPassword(password);
			session.connect();

			Channel channel = session.openChannel("sftp");
			channel.connect();
			ChannelSftp sftpChannel = (ChannelSftp) channel;
			Vector<ChannelSftp.LsEntry> list = sftpChannel.ls(originFolder + "*");
			for (ChannelSftp.LsEntry entry : list) {
				System.out.println(entry.getLongname());
				InputStream inputStream = sftpChannel.get(originFolder + entry.getFilename());
				InputStreamToFile(inputStream, destinationFolder + entry.getFilename());
				sftpChannel.rm(originFolder + entry.getFilename());
			}
			sftpChannel.exit();
		} catch (JSchException e) {
			e.printStackTrace();
		} catch (SftpException e) {
			e.printStackTrace();
		} finally {
			session.disconnect();
		}

	}

	public void InputStreamToFile(InputStream initialStream, String fileDest) throws IOException {
		File targetFile = new File(fileDest);
		java.nio.file.Files.copy(initialStream, targetFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
		IOUtils.closeQuietly(initialStream);
	}

	public void upload(String source, String destination) throws JSchException, SftpException {
		Channel channel = session.openChannel("sftp");
		channel.connect();
		ChannelSftp sftpChannel = (ChannelSftp) channel;
		sftpChannel.put(source, destination);
		sftpChannel.exit();
	}

	public void download(String source, String destination) throws JSchException, SftpException {
		Channel channel = session.openChannel("sftp");
		channel.connect();
		ChannelSftp sftpChannel = (ChannelSftp) channel;
		sftpChannel.get(source, destination);
		sftpChannel.exit();
	}

	public void disconnect() {
		if (session != null) {
			session.disconnect();
		}
	}
}
