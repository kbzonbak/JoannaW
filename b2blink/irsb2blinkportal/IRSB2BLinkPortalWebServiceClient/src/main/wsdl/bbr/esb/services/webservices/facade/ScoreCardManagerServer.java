package bbr.esb.services.webservices.facade;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.1.3
 * Thu Dec 03 11:49:19 CLT 2020
 * Generated source version: 2.1.3
 * 
 */
 
@WebService(targetNamespace = "http://facade.webservices.services.esb.bbr/", name = "ScoreCardManagerServer")
@XmlSeeAlso({ObjectFactory.class})
public interface ScoreCardManagerServer {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRequestFilter", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetRequestFilter")
    @ResponseWrapper(localName = "getRequestFilterResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetRequestFilterResponse")
    @WebMethod
    public java.util.List<bbr.esb.services.webservices.facade.RequestFilterForTicketDTO> getRequestFilter(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getServices", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetServices")
    @ResponseWrapper(localName = "getServicesResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetServicesResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.ServiceFilterDTO getServices(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getScoreCardOfCompany", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetScoreCardOfCompany")
    @ResponseWrapper(localName = "getScoreCardOfCompanyResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetScoreCardOfCompanyResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.ScoreCardDTO getScoreCardOfCompany(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getTickesStates", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetTickesStates")
    @ResponseWrapper(localName = "getTickesStatesResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetTickesStatesResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.TicketStateTypeFilterDTO getTickesStates();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getSites", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetSites")
    @ResponseWrapper(localName = "getSitesResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetSitesResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.SitesFilterDTO getSites(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getTicketReport", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetTicketReport")
    @ResponseWrapper(localName = "getTicketReportResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetTicketReportResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.TicketReportResultDTO getTicketReport(
        @WebParam(name = "arg0", targetNamespace = "")
        bbr.esb.services.webservices.facade.TicketReportInitParamDTO arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getCompanies", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetCompanies")
    @ResponseWrapper(localName = "getCompaniesResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetCompaniesResponse")
    @WebMethod
    public java.util.List<bbr.esb.services.webservices.facade.CompanyDTO> getCompanies() throws AccessDeniedException_Exception, OperationFailedException_Exception, NotFoundException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getScoreCardTableOfCompany", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetScoreCardTableOfCompany")
    @ResponseWrapper(localName = "getScoreCardTableOfCompanyResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetScoreCardTableOfCompanyResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.ScoreCardTableOfCompanyReturnDTO getScoreCardTableOfCompany(
        @WebParam(name = "arg0", targetNamespace = "")
        bbr.esb.services.webservices.facade.ScoreCardTableOfCompanyInitParamDTO arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "doAddServiceEventByContracted", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.DoAddServiceEventByContracted")
    @ResponseWrapper(localName = "doAddServiceEventByContractedResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.DoAddServiceEventByContractedResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.BaseResultDTO doAddServiceEventByContracted(
        @WebParam(name = "arg0", targetNamespace = "")
        bbr.esb.services.webservices.facade.DocumentsToResendInitParamDTO arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAvailableSite", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetAvailableSite")
    @ResponseWrapper(localName = "getAvailableSiteResponse", targetNamespace = "http://facade.webservices.services.esb.bbr/", className = "bbr.esb.services.webservices.facade.GetAvailableSiteResponse")
    @WebMethod
    public bbr.esb.services.webservices.facade.ScoreCardSiteFilterDTO getAvailableSite(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    );
}
