<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <joined-subclass name="bbr.b2b.logistic.datings.entities.Dating" table="DATING" 
			entity-name="bbr.b2b.logistic.datings.entities.Dating" 
    		extends="bbr.b2b.logistic.datings.entities.Reserve" schema="LOGISTICA">
	   		<key column ="ID" />	 
	   		
        <property name="number" type="java.lang.Long"/>
        <property name="confirmated" type="java.lang.Boolean"/>
		<property name="comment" type="java.lang.String"/>
		<property name="confirmationdate" type="java.time.LocalDateTime"/>
        <property name="sentstatus" type="java.lang.Boolean"/>
        
		<many-to-one name="vendor" 
			class="bbr.b2b.logistic.vendors.entities.Vendor" column="VENDOR_ID" 
			not-null="false" />	
        
        <many-to-one name="dvrdelivery" 
        	class="bbr.b2b.logistic.dvrdeliveries.entities.DvrDelivery" column="DVRDELIVERY_ID" 
            not-null="false"/>
                

        <sql-query name="getDatingInformation">
        	<![CDATA[
        		SELECT 
					dt.dvrdelivery_id AS dvrdelvieryid,
					dt.confirmationdate AS confirmationdate,
					rs.when1 AS datingdate,
					dt.comment
				FROM 
					 logistica.dating as dt
				JOIN logistica.reserve as rs
					ON dt.id = rs.id
				WHERE dt.dvrdelivery_id = :dvrdeliveryid
        	]]>
        </sql-query>
                
		<sql-query name="getDatingTimeDockData">
        	<![CDATA[        		
				WITH starts AS (
					SELECT 
						rs.id,
						rs.when1,
						dk.code,
						MIN(md.starts) AS starts
					FROM 
						 logistica.reserve as rs
					JOIN logistica.reservedetail as rd
						ON rd.reserve_id = rs.id
					JOIN logistica.dating as dt
						ON dt.id = rs.id
					JOIN logistica.module as md
						ON md.id = rd.module_id
					JOIN logistica.dock as dk
						ON dk.id = rd.dock_id
					WHERE dt.dvrdelivery_id = :dvrdeliveryid
					GROUP BY rs.id, rs.when1, dk.code
				),

				ENDS AS (
					SELECT 
						rs.id,
						rs.when1,
						dk.code,
						MAX(md.ends) AS ends
					FROM 
						 logistica.reserve as rs
					JOIN logistica.reservedetail as rd
						ON rd.reserve_id = rs.id
					JOIN logistica.dating as dt
						ON dt.id = rs.id
					JOIN logistica.module as md
						ON md.id = rd.module_id
					JOIN logistica.dock as dk
						ON dk.id = rd.dock_id
					WHERE dt.dvrdelivery_id = :dvrdeliveryid
					GROUP BY rs.id, dk.code
				)

				SELECT		
					st.code as dockname,
					st.when1\:\:date + st.starts\:\:time AS starttime, 
					ed.when1\:\:date + ed.ends\:\:time AS endtime,
				    cast(EXTRACT(HOUR FROM ed.ends - st.starts) as BIGINT) AS intervalhour,
				   	cast(EXTRACT(MINUTE FROM ed.ends - st.starts) as BIGINT) AS intervalminute
		
				FROM starts AS st
				JOIN ends AS ed
					ON st.id = ed.id
					AND st.code = ed.code
        	
        	]]>
        </sql-query>
                
                
		<sql-query name="getDatingDataToMessage">
			<![CDATA[
				WITH starts AS(
						SELECT 
							rs.id,
							rs.when1,
							MIN(md.starts) AS starts
						FROM
							logistica.reserve AS rs JOIN
							logistica.reservedetail AS rd ON rd.reserve_id = rs.id JOIN
							logistica.dating AS dt ON dt.id = rs.id JOIN
							logistica.module AS md ON md.id = rd.module_id JOIN
							logistica.dock AS dk ON dk.id = rd.dock_id
						WHERE
							dt.dvrdelivery_id = :dvrdeliveryid
						GROUP BY
							rs.id, rs.when1),
				ends AS(
						SELECT 
							rs.id,
							rs.when1,
							MAX(md.ends) AS ends
						FROM
							logistica.reserve AS rs JOIN
							logistica.reservedetail AS rd ON rd.reserve_id = rs.id JOIN
							logistica.dating AS dt ON dt.id = rs.id JOIN
							logistica.module AS md ON md.id = rd.module_id JOIN
							logistica.dock AS dk ON dk.id = rd.dock_id
						WHERE
							dt.dvrdelivery_id = :dvrdeliveryid
						GROUP BY
							rs.id, rs.when1),
				totalunits as(
						SELECT 
							dvrod.dvrdelivery_id,
							SUM(dvrod.estimatedunits) AS estimatedunits
						FROM
							logistica.dvrorderdelivery AS dvrod
						WHERE
							dvrod.dvrdelivery_id = :dvrdeliveryid
						GROUP BY
							dvrod.dvrdelivery_id)
				SELECT DISTINCT
					dvrdel.id AS dvrdeliveryid,
					dvrdel.number AS dvrdeliverynumber,
					delloc.code AS deliverylocationcode,
					delloc.name AS deliverylocationname,
					dk.code AS dockcode,
					CAST('CREATE'  as VARCHAR) as action,
					TO_TIMESTAMP(CAST (TO_CHAR(res.when1, 'YYYY-MM-DD') || ' ' || TO_CHAR(st.starts, 'HH24:MI:SS') as VARCHAR), 'YYYY-MM-DD HH24:MI:SS') AS reservestart,
					CAST(EXTRACT(EPOCH FROM ed.ends - st.starts) / 60 as BIGINT) AS reserveminutes,
					tu.estimatedunits	
				FROM
					logistica.dvrdelivery AS dvrdel JOIN
					logistica.location AS delloc ON delloc.id = dvrdel.deliverylocation_id LEFT JOIN
					logistica.bulk AS bu ON bu.dvrdelivery_id = dvrdel.id JOIN
					logistica.dating AS dat ON dat.dvrdelivery_id = dvrdel.id JOIN
					logistica.reserve AS res ON res.id = dat.id JOIN
					logistica.reservedetail AS rd ON rd.reserve_id = res.id JOIN
					logistica.dock AS dk ON dk.id = rd.dock_id JOIN
					totalunits AS tu ON tu.dvrdelivery_id = dvrdel.id JOIN
					starts AS st ON st.id = dat.id JOIN
					ends AS ed ON st.id = dat.id
				WHERE
					dvrdel.id = :dvrdeliveryid
			]]>
		</sql-query>
        
        <sql-query name="getExcelDatingReport">
        	<![CDATA[
				WITH initialtime AS(
					SELECT
						rd.reserve_id,
						MIN(md.starts) AS starts
					FROM
						logistica.reservedetail AS rd JOIN
						logistica.reserve AS res ON res.id = rd.reserve_id JOIN
						logistica.module AS md ON md.id = rd.module_id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
					GROUP BY
						rd.reserve_id),
				finaltime AS(
					SELECT
						rd.reserve_id,
						MAX(md.ends) AS ends
					FROM
						logistica.reservedetail AS rd JOIN
						logistica.reserve AS res ON res.id = rd.reserve_id JOIN
						logistica.module AS md ON md.id = rd.module_id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
					GROUP BY
						rd.reserve_id),
				docks AS(	
					SELECT
						rd.reserve_id,
						dk.code AS dockname
					FROM
						logistica.reserve AS res JOIN
						logistica.reservedetail AS rd ON res.id = rd.reserve_id JOIN
						logistica.dock AS dk ON dk.id = rd.dock_id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
					GROUP BY
						rd.reserve_id, dk.code),
				units AS(
					SELECT
						bd.dvrdelivery_id,
						bu.document_id,
						bd.dvrorder_id,
						SUM(bd.units) AS confirmedunits
					FROM 
						logistica.reserve AS res JOIN
						logistica.dating AS dat ON dat.id = res.id JOIN
						logistica.bulk AS bu ON bu.dvrdelivery_id = dat.dvrdelivery_id JOIN
						logistica.bulkdetail AS bd ON bd.bulk_id = bu.id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
					GROUP BY
						bd.dvrdelivery_id, bu.document_id, bd.dvrorder_id),
				lpns AS(
					SELECT
						bd.dvrdelivery_id,
						bu.document_id,
						bd.dvrorder_id,
						CAST(COUNT(bu.id) AS float8) AS totalbulks
					FROM
						logistica.reserve AS res JOIN
						logistica.dating AS dat ON dat.id = res.id JOIN
						logistica.bulk AS bu ON bu.dvrdelivery_id = dat.dvrdelivery_id JOIN
						logistica.bulkdetail AS bd ON bd.bulk_id = bu.id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
					GROUP BY
						bd.dvrdelivery_id, bu.document_id, bd.dvrorder_id),
				document AS(
					(SELECT DISTINCT
						bd.dvrdelivery_id,
						bd.dvrorder_id,
						bu.document_id,
						doc.number AS documentnumber,
						dot.name AS documenttype
					 FROM
						logistica.reserve AS res JOIN
						logistica.dating AS dat ON dat.id = res.id JOIN						
						logistica.dvrorderdeliverydetail AS dvrodd ON dvrodd.dvrdelivery_id = dat.dvrdelivery_id JOIN
						logistica.bulkdetail AS bd ON bd.dvrorder_id = dvrodd.dvrorder_id AND bd.dvrdelivery_id = dvrodd.dvrdelivery_id AND
													  bd.item_id = dvrodd.item_id AND bd.location_id = dvrodd.location_id AND bd.position = dvrodd.position JOIN
						logistica.bulk AS bu ON bu.id = bd.bulk_id JOIN
						logistica.document AS doc ON doc.id = bu.document_id JOIN
						logistica.documenttype AS dot ON dot.id = doc.documenttype_id
					 WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid)
					UNION
					(SELECT DISTINCT
						dvrod.dvrdelivery_id,
						dvrod.dvrorder_id,
						-1 AS document_id,
						CAST('' AS VARCHAR) AS documentnumber,
						CAST('' AS VARCHAR) AS documenttype
					FROM
						logistica.reserve AS res JOIN
						logistica.dating AS dat ON dat.id = res.id JOIN
						logistica.dvrorderdelivery AS dvrod ON dvrod.dvrdelivery_id = dat.dvrdelivery_id LEFT JOIN
						logistica.bulk AS bu ON bu.dvrdelivery_id = dvrod.dvrdelivery_id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid AND bu.dvrdelivery_id IS NULL)),
				departments AS(
					SELECT DISTINCT
						dvrodd.dvrdelivery_id,
						COALESCE(bu.document_id, -1) AS document_id,
						dvrodd.dvrorder_id,
						de.value AS departmentvalue
					FROM
						logistica.reserve AS res JOIN
						logistica.dating AS dat ON dat.id = res.id JOIN						
						logistica.dvrorderdeliverydetail AS dvrodd ON dvrodd.dvrdelivery_id = dat.dvrdelivery_id JOIN
						logistica.itemattribute AS de ON de.item_id = dvrodd.item_id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
						logistica.bulkdetail AS bd ON bd.dvrorder_id = dvrodd.dvrorder_id AND bd.dvrdelivery_id = dvrodd.dvrdelivery_id AND
													  bd.item_id = dvrodd.item_id AND bd.location_id = dvrodd.location_id AND bd.position = dvrodd.position LEFT JOIN
						logistica.bulk AS bu ON bu.id = bd.bulk_id
					WHERE
						res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
					ORDER BY
						de.value),
				aggdepartments AS(
					SELECT
						dvrdelivery_id,
						document_id,
						dvrorder_id,
						ARRAY_TO_STRING(ARRAY_AGG(departmentvalue), '-') AS departmentvalue
					FROM
						departments
					GROUP BY
						dvrdelivery_id, document_id, dvrorder_id)
				SELECT DISTINCT
					res.id AS reserveid,
					ve.code AS vendorcode,
					ve.name AS vendorname,
					oc.number AS ocnumber,
					ot.description AS ordertype,
					dvroc.deliverydate AS deliverydate,
					COALESCE(de.departmentvalue, '') AS departments,
					dvrdel.number AS dvrdeliverynumber,
					dst.description  AS dvrdeliverystatetype,
					doc.documentnumber AS documentnumber,
					doc.documenttype AS documenttype,
					dr.when1 AS datingrequestwhen,
					dr.requestdate AS datingrequestdate,
					dr.needmodule AS timemodule,
					dr.estimatedbulks AS estimatedbulks,
					dat.confirmationdate AS datingconfirmationdate,
					COALESCE(ut.confirmedunits, 0.0) AS confirmedunits,
					COALESCE(lpn.totalbulks, 0.0) AS totallpn,
					res.when1 AS datingdate,
					TO_TIMESTAMP(CAST(TO_CHAR(res.when1, 'YYYY-MM-DD') || ' ' || TO_CHAR(it.starts, 'HH24:MI:SS') AS VARCHAR), 'YYYY-MM-DD HH24:MI:SS') AS datinginitialtime,
					CAST(EXTRACT(EPOCH FROM (ft.ends - it.starts)) AS BIGINT) AS datingdurationsql,
					dk.dockname AS dockname
				FROM
					logistica.dating AS dat JOIN
					logistica.reserve AS res ON res.id = dat.id JOIN
					initialtime AS it ON it.reserve_id = res.id JOIN
					finaltime AS ft ON ft.reserve_id = res.id JOIN
					docks AS dk ON dk.reserve_id = res.id JOIN
					logistica.dvrdelivery AS dvrdel ON dvrdel.id = dat.dvrdelivery_id JOIN
					logistica.dvrdeliverystatetype AS dst ON dst.id = dvrdel.currentstatetype_id JOIN
					logistica.datingrequest AS dr ON dr.dvrdelivery_id = dvrdel.id JOIN
					logistica.dvrorderdeliverydetail AS dvrodd ON dvrodd.dvrdelivery_id = dvrdel.id JOIN
					logistica.dvrorder AS dvroc ON dvroc.id = dvrodd.dvrorder_id JOIN
					logistica.order AS oc ON oc.id = dvroc.id JOIN
					logistica.ordertype AS ot ON ot.id = oc.ordertype_id JOIN
					logistica.vendor AS ve ON ve.id = dvrdel.vendor_id JOIN
					document AS doc ON doc.dvrdelivery_id = dvrdel.id AND doc.dvrorder_id = oc.id LEFT JOIN
					units AS ut ON ut.dvrdelivery_id = dvrdel.id AND ut.document_id = doc.document_id AND ut.dvrorder_id = oc.id LEFT JOIN
					lpns AS lpn ON lpn.dvrdelivery_id = dvrdel.id AND lpn.document_id = doc.document_id AND lpn.dvrorder_id = oc.id LEFT JOIN
					aggdepartments AS de ON de.dvrdelivery_id = dvrdel.id AND de.document_id = doc.document_id AND de.dvrorder_id = oc.id
				WHERE 
					res.when1 >= :since AND res.when1 <= :until AND res.location_id = :locationid
				ORDER BY
					res.when1, dvrdel.number, oc.number, doc.documentnumber
        	]]>
        </sql-query>
        
        
    </joined-subclass>
</hibernate-mapping>
