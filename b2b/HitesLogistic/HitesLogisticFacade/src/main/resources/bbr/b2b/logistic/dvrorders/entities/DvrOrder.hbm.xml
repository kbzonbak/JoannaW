<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<joined-subclass name="bbr.b2b.logistic.dvrorders.entities.DvrOrder" table="DVRORDER" 
		entity-name="bbr.b2b.logistic.dvrorders.entities.DvrOrder" extends="bbr.b2b.logistic.buyorders.entities.Order" schema="LOGISTICA">
		<key column ="ID" />
		
		<property name="deliverydate" type="java.time.LocalDateTime" column="DELIVERYDATE"/>
		<property name="expiration" type="java.time.LocalDateTime" column="EXPIRATION"/>	
		<property name="paymenttype" type="java.lang.String" column="PAYMENTTYPE" length="250"/>
		<property name="comment" type="java.lang.String" column="COMMENT" length="250"/>
		<property name="multidelivery" type="java.lang.Boolean" column="MULTIDELIVERY"/>
		<property name="warehousecode" type="java.lang.String" column="WAREHOUSECODE" length="50"/>
		<property name="totalunits" type="java.lang.Double" column="TOTALUNITS"/>		
		<property name="todeliveryunits" type="java.lang.Double" column="TODELIVERYUNITS"/>	
		<property name="receivedunits" type="java.lang.Double" column="RECEIVEDUNITS"/>
		<property name="pendingunits" type="java.lang.Double" column="PENDINGUNITS"/>
		<property name="totalneed" type="java.lang.Double" column="TOTALNEED"/>	
		<property name="totaltodelivery" type="java.lang.Double" column="TOTALTODELIVERY"/>	
		<property name="totalreceived" type="java.lang.Double" column="TOTALRECEIVED"/>	
		<property name="totalpending" type="java.lang.Double" column="TOTALPENDING"/>
		<property name="currentstatetypedate" type="java.time.LocalDateTime" column="CURRENTSTATETYPEDATE"/>
		<property name="referencenumber" type="java.lang.String" column="REFERENCENUMBER" length="50"/>
		<property name="paymentdays" type="java.lang.String" column="PAYMENT_DAYS" length="250"/>
		<property name="clientdeliverydate" type="java.time.LocalDateTime" column="CLIENT_DELIVERY_DATE"/>		
		<property name="netamount" type="java.lang.Double" column="NETAMOUNT"/>
		<property name="taxamount" type="java.lang.Double" column="TAXAMOUNT"/>
		<property name="totalamountoc" type="java.lang.Double" column="TOTALAMOUNTOC"/>
		<property name="reschedulingdate" type="java.time.LocalDateTime" column="RESCHEDULINGDATE"/>
		<property name="reschedulingcounter" type="java.lang.Integer" column="RESCHEDULINGCOUNTER"></property>
		
		
		<many-to-one name="currentstatetype"
			class="bbr.b2b.logistic.dvrorders.entities.DvrOrderStateType" column="CURRENTSTATETYPE_ID"
			not-null="true" />	
			
		<many-to-one name="deliverylocation"
			class="bbr.b2b.logistic.locations.entities.Location" column="DELIVERYLOCATION_ID"
			not-null="false"/>		
		
		<many-to-one name="salelocation"
			class="bbr.b2b.logistic.locations.entities.Location" column="SALELOCATION_ID"
			not-null="false"/>

		<sql-query name="doCalculateTotalDvrOrder">
			<![CDATA[		
				WITH FOO as (
					SELECT 
					dvrorder_id as dvrorderid,
					SUM(totalunits) as totalunits,
					SUM(todeliveryunits) as todeliveryunits,
					SUM(receivedunits) as receivedunits,
					SUM(pendingunits) as pendingunits,
					SUM(totaltodelivery) as totaltodelivery,
					SUM(totalreceived) as totalreceived,
					SUM(totalpending) as totalpending,
					SUM(totalneed) as totalneed
					FROM logistica.dvrpredeliverydetail
					WHERE dvrorder_id in (:dvrorderids)
					GROUP BY dvrorder_id
				) 
				
				UPDATE LOGISTICA.DVRORDER
				SET totalunits = FOO.TOTALUNITS, 
				pendingunits = FOO.PENDINGUNITS,
				receivedunits = FOO.RECEIVEDUNITS,
				todeliveryunits = FOO.TODELIVERYUNITS,
				totalneed = FOO.TOTALNEED,
				totalpending = FOO.TOTALPENDING,
				totalreceived = FOO.TOTALRECEIVED,
				totaltodelivery = FOO.TOTALTODELIVERY
				FROM FOO
				WHERE FOO.DVRORDERID = ID;
			]]>
		</sql-query>
		
		<sql-query name="getDvrOrdersExcelReportByOrders">
			<![CDATA[
				WITH at AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							st.id,
							st.value AS stylevalue,
							se.id,
							se.value AS seasonvalue,
							de.id,
							de.value AS departmentvalue,
							si.id,
							si.value AS sizevalue,
							co.id,
							co.value AS colorvalue
						FROM
							logistica.dvrorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute st ON st.item_id = it.id AND st.attributetype = 'ESTILO' LEFT JOIN
							logistica.itemattribute se ON se.item_id = it.id AND se.attributetype = 'TEMPORADA' LEFT JOIN
							logistica.itemattribute de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
							logistica.itemattribute si ON si.item_id = it.id AND si.attributetype = 'TALLA' LEFT JOIN
							logistica.itemattribute co ON co.item_id = it.id AND co.attributetype = 'COLOR'
						WHERE
							od.dvrorder_id IN (:dvrorderids)
						ORDER BY
							it.id, st.id, se.id, de.id, si.id, co.id)							
				SELECT DISTINCT
					o.number AS number,
					vd.dni AS vendordni,
					vd.tradename AS vendortradename,
					dllo.code AS deliverylocationcode,
					dllo.name AS deliverylocationname,
					dtlo.code AS destinationlocationcode,
					dtlo.name AS destinationlocationname,
					od.barcode1 AS detailbarcode1,
					it.sku AS itemsku,
					COALESCE(vi.vendoritemcode, '') AS vendoritemcode,
					COALESCE(stylevalue, '') AS style,
					o.emitted AS emitted,
					ot.deliverydate AS deliverydate,
					ot.expiration AS expiration,
					COALESCE(seasonvalue, '') AS season,
					COALESCE(departmentvalue, '') AS department,
					it.name AS itemname,
					COALESCE(sizevalue, '') AS size,
					COALESCE(colorvalue, '') AS color,
					pdd.totalunits AS totalunits,
					pdd.todeliveryunits AS todeliveryunits,
					pdd.receivedunits AS receivedunits,
					pdd.pendingunits AS pendingunits,
					od.finalcost AS finalcost
				FROM
					logistica.order AS o JOIN
					logistica.ordertype AS oty ON oty.id = o.ordertype_id JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.location AS dllo ON dllo.id = ot.deliverylocation_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = ot.id JOIN
					logistica.dvrpredeliverydetail AS pdd ON pdd.dvrorder_id = od.dvrorder_id AND pdd.item_id = od.item_id AND pdd.position = od.position JOIN
					logistica.location AS dtlo ON dtlo.id = pdd.location_id JOIN
					logistica.item AS it ON it.id = pdd.item_id LEFT JOIN
					logistica.vendoritem AS vi ON vi.item_id = it.id AND vi.vendor_id = o.vendor_id LEFT JOIN
					at ON at.item_id = it.id
				WHERE
					o.id IN (:dvrorderids) AND oty.code != 'DVH'
				ORDER BY 
					o.number
				]]>
		</sql-query>
			
		<sql-query name="countDvrOrdersExcelReportByOrders">
			<![CDATA[               
			    SELECT 
			    	COUNT(o.id)
				FROM
					logistica.order AS o JOIN
					logistica.ordertype AS oty ON oty.id = o.ordertype_id JOIN
					logistica.dvrpredeliverydetail AS pdd ON pdd.dvrorder_id = o.id			
				WHERE
					o.id IN (:dvrorderids) AND oty.code != 'DVH'
				]]>
		</sql-query>
		
		<sql-query name="getDvhOrdersExcelReportByOrders">
			<![CDATA[
				WITH oat AS (
						SELECT DISTINCT ON (o.id)
							o.id AS order_id,
							rt.id,
							rt.value AS routevalue,
							bx.id,
							bx.value AS boxvalue
						FROM
							logistica.dvrorder AS o LEFT JOIN
							logistica.orderattribute AS rt ON rt.order_id = o.id AND rt.attributetype = 'RUTA' LEFT JOIN
							logistica.orderattribute AS bx ON bx.order_id = o.id AND bx.attributetype = 'CAJA'
						WHERE
							o.id IN (:dvhorderids)
						ORDER BY
							o.id, rt.id, bx.id),
					 iat AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							de.id,
							de.value AS departmentvalue,
							sc.id,
							sc.value AS shortcodevalue
						FROM
							logistica.dvrorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute AS de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
							logistica.itemattribute AS sc ON sc.item_id = it.id AND sc.attributetype = 'CODIGO_CORTO'
						WHERE
							od.dvrorder_id IN (:dvhorderids)
						ORDER BY
							it.id, de.id, sc.id)
				SELECT DISTINCT
					o.number AS number,
					COALESCE(ot.referencenumber, '') AS referencenumber,
					o.emitted AS emitted,
					ot.expiration AS expiration,
					ot.deliverydate AS deliverydate,
					ot.client_delivery_date AS clientdeliverydate,
					vd.dni AS vendordni,
					vd.tradename AS vendortradename,
					dll.code AS deliverylocationcode,
					dll.name AS deliverylocationname,
					COALESCE(sll.code, '') AS salelocationcode,
					COALESCE(sll.name, '') AS salelocationname,
					COALESCE(iat.departmentvalue, '') AS departmentname,
					COALESCE(oat.routevalue, '') AS route,
					cl.dni AS clientdni,
					cl.name AS clientname,
					COALESCE(cl.address, '') AS clientaddress,
					COALESCE(cl.commune, '') AS clientcommune,
					COALESCE(cl.city, '') AS clientcity,
					COALESCE(cl.phone, '') AS clientphone,
					COALESCE(cl.email, '') AS clientemail,
					COALESCE(cl.comment, '') AS clientcomment,
					COALESCE(oat.boxvalue, '') AS boxnumber,
					it.sku AS itemsku,
					it.name AS itemname,
					COALESCE(iat.shortcodevalue, '') AS itemshortcode,
					od.barcode1 AS itembarcode1,
					od.normalprice AS normalprice,
					od.finalcost AS finalcost,
					od.totalunits AS totalunits
				FROM
					logistica.order AS o JOIN
					logistica.ordertype AS oty ON oty.id = o.ordertype_id JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN 
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.location AS dll ON dll.id = ot.deliverylocation_id LEFT JOIN
					logistica.location AS sll ON sll.id = ot.salelocation_id JOIN
					logistica.client AS cl ON cl.id = o.client_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = ot.id JOIN
					logistica.item AS it ON it.id = od.item_id LEFT JOIN
					oat ON oat.order_id = o.id LEFT JOIN
					iat ON iat.item_id = it.id
				WHERE
					o.id IN (:dvhorderids) AND oty.code = 'DVH'
				ORDER BY
					o.number
				]]>
		</sql-query>
		
		<sql-query name="countDvhOrdersExcelReportByOrders">
			<![CDATA[               
			    SELECT 
			    	COUNT(o.id)
				FROM
					logistica.order AS o JOIN
					logistica.ordertype AS oty ON oty.id = o.ordertype_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = o.id
				WHERE
					o.id IN (:dvhorderids) AND oty.code = 'DVH'
				]]>
		</sql-query>

		<sql-query name="getDvrOrdersPdfDataByOrders">
			<![CDATA[
				WITH tot AS (
						SELECT
							dvrorder_id,
							SUM(totalunits) AS totalunits,
							SUM(finalcost) AS finalcost,
							SUM(totalneed - (COALESCE(basecost, finalcost) * totalunits)) AS totaldiscounts,
							SUM(totalneed) AS totalneed
						FROM
							logistica.dvrorderdetail
						WHERE
							dvrorder_id IN (:dvrorderids)
						GROUP BY
							dvrorder_id)
				SELECT DISTINCT
					COALESCE(rt.description, '') AS retailerdescription,
					vd.tradename AS vendortradename,
					o.number AS number,
					o.emitted AS emitted,
					ot.deliverydate AS deliverydate,
					ot.expiration AS expiration,
					COALESCE(ot.payment_days, '') AS paymentdays,
					lo.code AS deliverylocationcode,
					lo.name AS deliverylocationname,
					COALESCE(lo.address, '') AS deliverylocationaddress,
					rp.name AS responsiblename,
					tot.totalunits AS totalunits,
					tot.finalcost AS finalcost,
					tot.totaldiscounts AS totaldiscounts,
					tot.totalneed AS totalneed
				FROM 
					logistica.order AS o JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN
					logistica.retailer AS rt ON rt.id = o.retailer_id JOIN
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.location AS lo ON lo.id = ot.deliverylocation_id JOIN
					logistica.responsable AS rp ON rp.id = o.responsable_id JOIN
					tot ON tot.dvrorder_id = ot.id
				WHERE
					o.id IN (:dvrorderids)
				ORDER BY 
					o.number
				]]>
		</sql-query>
		
		<sql-query name="getDvrOrderLabelsByOrders">
			<![CDATA[
				WITH at AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							it.name AS itemname,
							vd.id,
							vd.value AS verificationdigitvalue,
							si.id,
							si.value AS sizevalue,
							cy.id,
							cy.value AS creationyearvalue,
							se.id,
							se.value AS seasonvalue,
							de.id,
							de.value AS departmentvalue,							
							st.id,
							st.value AS stylevalue,
							co.id,
							co.value AS colorvalue,
							dv.id,
							dv.value AS devolutionvalue
						FROM
							logistica.dvrorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute vd ON vd.item_id = it.id AND vd.attributetype = 'DV_PRODUCTO' LEFT JOIN
							logistica.itemattribute si ON si.item_id = it.id AND si.attributetype = 'TALLA' LEFT JOIN
							logistica.itemattribute cy ON cy.item_id = it.id AND cy.attributetype = 'CREACION' LEFT JOIN
							logistica.itemattribute se ON se.item_id = it.id AND se.attributetype = 'TEMPORADA' LEFT JOIN
							logistica.itemattribute de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN							
							logistica.itemattribute st ON st.item_id = it.id AND st.attributetype = 'ESTILO' LEFT JOIN							
							logistica.itemattribute co ON co.item_id = it.id AND co.attributetype = 'COLOR' LEFT JOIN							
							logistica.itemattribute dv ON dv.item_id = it.id AND dv.attributetype = 'DEVOLUCION'
						WHERE
							od.dvrorder_id IN (:dvrorderids)
						ORDER BY
							it.id, vd.id, si.id, cy.id, se.id, de.id, st.id, co.id, dv.id)
				SELECT
					o.id AS dvrorderid,
					o.number AS ordernumber,
					at.item_id AS itemid,
					at.itemname AS itemname,
					od.barcode1 AS detailbarcode1,
					COALESCE(at.verificationdigitvalue, '') AS verificationdigit,
					COALESCE(at.sizevalue, '') AS size,
					COALESCE(at.creationyearvalue, '') AS creationyear,
					COALESCE(at.seasonvalue, '') AS season,
					COALESCE(at.departmentvalue, '') AS department,
					COALESCE(at.stylevalue, '') AS style,
					COALESCE(at.colorvalue, '') AS color,
					COALESCE(at.devolutionvalue, '') AS devolution,
					od.normalprice AS normalprice,
					SUM(pdd.totalunits) AS totalunits,
					vd.id AS vendorid,
					vd.tradename AS vendortradename,
					vd.domestic AS vendordomestic
				FROM
					logistica.order AS o JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN 
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = ot.id JOIN
					logistica.dvrpredeliverydetail AS pdd ON pdd.dvrorder_id = od.dvrorder_id AND pdd.item_id = od.item_id AND pdd.position = od.position JOIN
					at ON at.item_id = pdd.item_id
				WHERE
					o.id IN (:dvrorderids)
				GROUP BY
					o.id, o.number, at.item_id, at.itemname, od.barcode1, at.verificationdigitvalue, at.sizevalue, at.creationyearvalue, at.seasonvalue, at.departmentvalue,
					at.stylevalue, at.colorvalue, at.devolutionvalue, od.normalprice, vd.id, vd.tradename, vd.domestic
				ORDER BY 
					o.number
				]]>
		</sql-query>
		
		<sql-query name="countDvrOrderLabelsByOrders">
			<![CDATA[               
			    SELECT 
			    	COUNT(dvrorder_id)
				FROM
					logistica.dvrorderdetail
				WHERE
					dvrorder_id IN (:dvrorderids)
				]]>
		</sql-query>
		
		<sql-query name="getDvrOrdersPdfDetailByOrders">
			<![CDATA[
				SELECT DISTINCT
					o.number AS number,
					od.position AS position,
					it.sku AS itemsku,
					it.name AS itemname,
					od.totalunits AS totalunits,
					od.finalcost AS finalcost,
					od.totalneed - (COALESCE(od.basecost, od.finalcost) * od.totalunits) AS totaldiscounts,
					od.totalneed AS totalneed
				FROM 
					logistica.order AS o JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = o.id JOIN
					logistica.item AS it ON it.id = od.item_id
				WHERE
					o.id IN (:dvrorderids)
				ORDER BY 
					o.number, od.position
				]]>
		</sql-query>
		
		<sql-query name="countDvrOrdersPdfDetailByOrders">
			<![CDATA[
				SELECT 
			    	COUNT(dvrorder_id)
				FROM
					logistica.dvrorderdetail
				WHERE
					dvrorder_id IN (:dvrorderids)
				]]>
		</sql-query>
		
	</joined-subclass>   
</hibernate-mapping>
