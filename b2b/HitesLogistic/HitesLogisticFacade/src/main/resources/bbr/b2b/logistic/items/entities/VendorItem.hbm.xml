<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.logistic.items.entities.VendorItem" table="VENDORITEM" 
		entity-name="bbr.b2b.logistic.items.entities.VendorItem" schema="LOGISTICA">
		<composite-id name="id" class="bbr.b2b.logistic.items.entities.VendorItemId">
			<key-property name="itemid" type="java.lang.Long"  column="ITEM_ID" />
			<key-property name="vendorid" type="java.lang.Long" column="VENDOR_ID" />
		</composite-id>		
		
		<property name="vendoritemcode" type="java.lang.String" column="VENDORITEMCODE" length="250"/>
		
		<many-to-one name="item" 
			class="bbr.b2b.logistic.items.entities.Item" column="ITEM_ID" 
			not-null="true" insert="false" update="false" />

		<many-to-one name="vendor" 
			class="bbr.b2b.logistic.vendors.entities.Vendor" column="VENDOR_ID" 
			not-null="true" insert="false" update="false" />
					
	
	
			<sql-query name="getVendorItemDatasofOrder">
			<![CDATA[               
	        	SELECT DISTINCT 
					I.ID, 
					I.SKU, 
					I.UMC_CD_VENDOR, 
					I.UMC_LOCATION_VENDOR, 
					I.UMD_CD_LOCATION, 
					I.UMD_VENDOR_CD, 
					I.UMD_VENDOR_LOCATION, 
					I.NAME, 
					COALESCE(VI.VENDORITEMCODE, '') AS VENDORITEMCODE
				from LOGISTICA.ITEM as I 
				join LOGISTICA.VENDORITEM VI on I.ID = VI.ITEM_ID 
				join LOGISTICA.VENDOR V on VI.VENDOR_ID = V.ID 
				join LOGISTICA.DVRORDERDETAIL OD on I.ID = OD.ITEM_ID 
				where OD.DVRORDER_ID = :orderid and  V.ID = :vendorid
				order by ID        
			]]>
		</sql-query>
		
		
		<sql-query name="getVendorItemDataofDirectOrder">
			<![CDATA[	
				SELECT DISTINCT 
					I.ID, 
					I.SKU, 
					I.UMC_CD_VENDOR, 
					I.UMC_LOCATION_VENDOR, 
					I.UMD_CD_LOCATION, 
					I.UMD_VENDOR_CD, 
					I.UMD_VENDOR_LOCATION, 
					I.NAME, 
					COALESCE(VI.VENDORITEMCODE, '') AS VENDORITEMCODE
				FROM 
					LOGISTICA.ITEM AS I JOIN 
					LOGISTICA.VENDORITEM VI ON I.ID = VI.ITEM_ID JOIN 
					LOGISTICA.VENDOR V ON VI.VENDOR_ID = V.ID JOIN 
					LOGISTICA.DDCORDERDETAIL ODT ON I.ID = ODT.ITEM_ID JOIN 
					LOGISTICA.order oc on ODT.ddcorder_id = oc.id join 
 					LOGISTICA.DDCORDER O ON ODT.DDCORDER_ID = O.ID AND V.ID = OC.VENDOR_ID
				WHERE 
					(O.ID = :orderid) 
				ORDER BY ID
			]]>
		</sql-query>
		
	</class>
</hibernate-mapping>
