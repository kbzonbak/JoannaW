<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.logistic.ddcorders.entities.DdcOrderDetail" table="DDCORDERDETAIL"
		entity-name="bbr.b2b.logistic.ddcorders.entities.DdcOrderDetail" schema="LOGISTICA">

		<composite-id name="id" class="bbr.b2b.logistic.ddcorders.entities.DdcOrderDetailId">
			<key-property name="ddcorderid" type="java.lang.Long" column="DDCORDER_ID" />
			<key-property name="itemid" type="java.lang.Long" column="ITEM_ID" />
			<key-property name="position" type="java.lang.Integer" column="POSITION"/>
		</composite-id>
		
		<property name="basecost" type="java.lang.Double" column="BASECOST"/>
		<property name="finalcost" type="java.lang.Double" column="FINALCOST" not-null="true"/>
		<property name="normalprice" type="java.lang.Double" column="NORMALPRICE"/>
		<property name="offerprice" type="java.lang.Double" column="OFFERPRICE"/>
		<property name="packingcode" type="java.lang.String" column="PACKINGCODE" length="50"/>
		<property name="packingdescription" type="java.lang.String" column="PACKINGESCRIPTION" length="250" not-null="true"/>
		<property name="baseunit" type="java.lang.String" column="BASEUNIT" not-null="true"/>
		<property name="productpackingrate" type="java.lang.Double" column="PRODUCTPACKINGRATE" not-null="true"/>
		<property name="ean" type="java.lang.String" column="EAN" length="50" not-null="true"/>
		<property name="barcode2" type="java.lang.String" column="BARCODE2" length="50"/>
		<property name="comment" type="java.lang.String" column="COMMENT" length="250"/>
		<property name="tolerance" type="java.lang.Double" column="TOLERANCE"/>
		<property name="itemdeliverydate" type="java.time.LocalDateTime" column="ITEMDELIVERYDATE"/>
		<property name="needunits" type="java.lang.Double" column="NEEDUNITS" not-null="true"/>
		<property name="todeliveryunits" type="java.lang.Double" column="TODELIVERYUNITS" not-null="true"/>
		<property name="receivedunits" type="java.lang.Double" column="RECEIVEDUNITS" not-null="true"/>
		<property name="pendingunits" type="java.lang.Double" column="PENDINGUNITS" not-null="true"/>
		<property name="totalneed" type="java.lang.Double" column="TOTALNEED" not-null="true"/>
		<property name="totaltodelivery" type="java.lang.Double" column="TOTALTODELIVERY" not-null="true"/>
		<property name="totalreceived" type="java.lang.Double" column="TOTALRECEIVED" not-null="true"/>
		<property name="totalpending" type="java.lang.Double" column="TOTALPENDING" not-null="true"/>

		<many-to-one name="ddcorder"
			class="bbr.b2b.logistic.ddcorders.entities.DdcOrder" column="DDCORDER_ID"
			not-null="true" insert="false" update="false" />

		<many-to-one name="item"
			class="bbr.b2b.logistic.items.entities.Item" column="ITEM_ID"
			not-null="true" insert="false" update="false" />
			
		<sql-query name="doCalculateTotalDdcOrderDetails">
			<![CDATA[
				WITH foo1 AS (
						SELECT
							od.ddcorder_id,
							od.item_id,
							od.position,
							od.finalcost,
							od.needunits,
							COALESCE(dd.availableunits, 0) AS availableunits,
							COALESCE(dd.receivedunits, 0) AS receivedunits,
							CASE WHEN dst.closed IS TRUE
								 THEN 0
								 ELSE CASE WHEN dd.availableunits - dd.receivedunits > 0
								 		   THEN dd.availableunits - dd.receivedunits
								 		   ELSE 0
								 		   END
								 END AS todeliveryunits
						FROM
							logistica.ddcorderdetail AS od LEFT JOIN
							logistica.ddcdelivery AS de ON de.ddcorder_id = od.ddcorder_id LEFT JOIN
							logistica.ddcdeliverydetail AS dd ON dd.ddcdelivery_id = de.id AND dd.item_id = od.item_id AND
																 dd.position = od.position LEFT JOIN
							logistica.ddcdeliverystatetype AS dst ON dst.id = de.currentstatetype_id
						WHERE
							od.ddcorder_id IN (:ddcorderids)),
					 foo2 AS (
					 	SELECT
					 		foo1.ddcorder_id,
					 		foo1.item_id,
					 		foo1.position,
					 		SUM(foo1.availableunits) AS availableunits,
					 		SUM(foo1.receivedunits) AS receivedunits,
					 		SUM(foo1.todeliveryunits) AS todeliveryunits
					 	FROM
					 		foo1
					 	GROUP BY
					 		foo1.ddcorder_id, foo1.item_id, foo1.position),
					 foo3 AS (
				   		SELECT
				   			foo1.ddcorder_id,
					 		foo1.item_id,
					 		foo1.position,
					 		foo1.needunits,
					 		foo2.todeliveryunits,
					 		foo2.receivedunits,
					 		foo1.needunits - foo2.todeliveryunits - foo2.receivedunits AS pendingunits,
					 		foo1.needunits * foo1.finalcost AS totalneed,
					 		foo2.todeliveryunits * foo1.finalcost AS totaltodelivery,
					 		foo2.receivedunits * foo1.finalcost AS totalreceived,
					 		(foo1.needunits - foo2.todeliveryunits - foo2.receivedunits) * foo1.finalcost AS totalpending
				   		FROM
				   			foo1 LEFT JOIN
				   			foo2 ON foo2.ddcorder_id = foo1.ddcorder_id AND foo2.item_id = foo1.item_id AND foo2.position = foo1.position)
				UPDATE logistica.ddcorderdetail AS ddcod
				SET
					todeliveryunits = foo3.todeliveryunits,
					receivedunits = foo3.receivedunits,
					pendingunits = foo3.pendingunits,
					totalneed = foo3.totalneed,
					totaltodelivery = foo3.totaltodelivery,
					totalreceived = foo3.totalreceived,
					totalpending = foo3.totalpending
	  			FROM
	  				foo3
	  			WHERE
	  				foo3.ddcorder_id = ddcod.ddcorder_id AND foo3.item_id = ddcod.item_id AND foo3.position = ddcod.position;
			]]>
		</sql-query>
		
		<sql-query name="getDirectOrderDetailDataofDirectOrder">
			<![CDATA[				
				SELECT
					OD.LISTPRICE,
					OD.FINALPRICE,
					OD.LISTCOST,
					OD.FINALCOST,
					OD.VISUALORDER,
					OD.ORDER_ID AS orderid,
					OD.ITEM_ID AS itemid,
					OD.UNITS,					
					OD.TODELIVERYUNITS,
					OD.RECEIVEDUNITS,
					OD.PENDINGUNITS,
					OD.TOTALNEED,
					OD.TOTALRECEIVED,
					OD.TOTALTODELIVERY,
					OD.TOTALPENDING
				FROM 
					LOGISTICA.DIRECTORDERDETAIL OD JOIN					
					LOGISTICA.DIRECTORDER O ON OD.ORDER_ID = O.ID
				WHERE
					(O.ID = :orderid) 				
				ORDER BY 
					ORDERID, 
					ITEMID			
			]]>
		</sql-query>
		
		<sql-query name="getDdcOrderDetailExcelReportByOrder">
			<![CDATA[
				WITH oat AS (
						SELECT DISTINCT ON (o.id)
							o.id AS order_id,
							dl.id,
							dl.value AS deliverylocationvalue,
							bx.id,
							bx.value AS boxvalue
						FROM
							logistica.dvrorder AS o LEFT JOIN
							logistica.orderattribute AS dl ON dl.order_id = o.id AND dl.attributetype = 'LOCAL_ENTREGA_DDC' LEFT JOIN
							logistica.orderattribute AS bx ON bx.order_id = o.id AND bx.attributetype = 'CAJA'
						WHERE
							o.id = :ddcorderid
						ORDER BY
							o.id, dl.id, bx.id),
					 iat AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							de.id,
							de.code AS departmentcode,
							de.value AS departmentvalue,
							sc.id,
							sc.value AS shortcodevalue
						FROM
							logistica.ddcorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute AS de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
							logistica.itemattribute AS sc ON sc.item_id = it.id AND sc.attributetype = 'CODIGO_CORTO'
						WHERE
							od.ddcorder_id = :ddcorderid
						ORDER BY
							it.id, de.id, sc.id)
				SELECT DISTINCT
					o.number AS number,
					COALESCE(ot.referencenumber, '') AS referencenumber,
					ot.dispatch_guide AS dispatchguide,
					o.emitted AS emitted,
					ot.expiration AS expiration,
					ot.currentdeliverydate AS currentdeliverydate,
					vd.dni AS vendordni,
					vd.tradename AS vendortradename,
					COALESCE(oat.deliverylocationvalue, '') AS deliverylocationcode,
					COALESCE(sl.code, '') AS salelocationcode,
					COALESCE(sl.name, '') AS salelocationname,
					COALESCE(iat.departmentcode, '') AS departmentcode,
					COALESCE(iat.departmentvalue, '') AS departmentname,
					cl.dni AS clientdni,
					cl.name AS clientname,
					COALESCE(cl.address, '') AS clientaddress,
					COALESCE(cl.commune, '') AS clientcommune,
					COALESCE(cl.city, '') AS clientcity,
					COALESCE(cl.phone, '') AS clientphone,
					COALESCE(cl.email, '') AS clientemail,
					COALESCE(cl.comment, '') AS clientcomment,
					COALESCE(oat.boxvalue, '') AS boxnumber,
					it.sku AS itemsku,
					it.name AS itemname,
					COALESCE(iat.shortcodevalue, '') AS itemshortcode,
					od.ean AS itemean,
					od.normalprice AS normalprice,
					od.finalcost AS finalcost,
					od.needunits AS needunits	
				FROM
					logistica.order AS o JOIN
					logistica.ddcorder AS ot ON ot.id = o.id JOIN 
					logistica.vendor AS vd ON vd.id = o.vendor_id LEFT JOIN
					logistica.location AS sl ON sl.id = ot.salelocation_id JOIN
					logistica.client AS cl ON cl.id = o.client_id JOIN
					logistica.ddcorderdetail AS od ON od.ddcorder_id = ot.id JOIN
					logistica.item AS it ON it.id = od.item_id LEFT JOIN
					oat ON oat.order_id = o.id LEFT JOIN
					iat ON iat.item_id = it.id
				WHERE
					o.id = :ddcorderid
				ORDER BY 
					o.number
				]]>
		</sql-query>
			
		<sql-query name="countDdcOrderDetailExcelReportByOrder">
			<![CDATA[               
			    SELECT 
			    	COUNT(ddcorder_id)
				FROM
					logistica.ddcorderdetail
				WHERE
					ddcorder_id = :ddcorderid
				]]>
		</sql-query>
		
	</class>
</hibernate-mapping>
