<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.logistic.datings.entities.ReserveDetail" table="RESERVEDETAIL" 
		entity-name="bbr.b2b.logistic.datings.entities.ReserveDetail" schema="LOGISTICA">
		
		<composite-id name="id" class="bbr.b2b.logistic.datings.entities.ReserveDetailId">
			<key-property name="reserveid" type="java.lang.Long" access="field" column="RESERVE_ID"/>
			<key-property name="moduleid" type="java.lang.Long" access="field" column="MODULE_ID"/>	
			<key-property name="dockid" type="java.lang.Long" access="field" column="DOCK_ID"/>
		</composite-id>
		
	
		
		<many-to-one name="datingresource" 
			class="bbr.b2b.logistic.datings.entities.DatingResource" 
			not-null="true" insert="false" update="false" unique-key="UNIQ_MODULE_DOCK_WHEN">
			<column name="DOCK_ID"></column>			
			<column name="MODULE_ID"></column>
		</many-to-one>		
		
		<many-to-one name="reserve"
			class="bbr.b2b.logistic.datings.entities.Reserve" column="RESERVE_ID"
			not-null="true" insert="false" update="false"/>
		 
		
		<property name="when" type="java.time.LocalDateTime" column="WHEN1" unique-key="UNIQ_MODULE_DOCK_WHEN"/>
		
		<sql-query name="getReserveDetailsByDateAndLocationExcludeVendor">
			<![CDATA[
				WITH reserves AS (
					SELECT
						rd.reserve_id AS reserveid,
						rd.dock_id AS dockid,
						rd.module_id AS moduleid,
						pdr.vendor_id AS vendorid
					FROM 
						logistica.reservedetail AS rd JOIN
						logistica.reserve AS rs ON rd.reserve_id = rs.id LEFT JOIN
						logistica.resourceblocking AS rb ON rb.id = rs.id LEFT JOIN
						logistica.predatingresourcegroup AS pdr ON pdr.id = rb.blockinggroup_id
					WHERE 
						rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid)
					SELECT
						reserves.reserveid,
						reserves.dockid,
						reserves.moduleid
					FROM
						reserves
					WHERE
						reserves.vendorid IS NULL OR reserves.vendorid != :vendorid
			]]>
		</sql-query>
		
	</class>
</hibernate-mapping>
