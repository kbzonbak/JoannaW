<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="bbr.b2b.logistic.dvrdeliveries.entities.DvrOrderDeliveryDetail" table="DVRORDERDELIVERYDETAIL"
    	entity-name="bbr.b2b.logistic.dvrdeliveries.entities.DvrOrderDeliveryDetail" schema="LOGISTICA">
        <composite-id name="id" class="bbr.b2b.logistic.dvrdeliveries.entities.DvrOrderDeliveryDetailId">
			<key-property name="dvrorderid" type="java.lang.Long" column="DVRORDER_ID"/>
			<key-property name="dvrdeliveryid" type="java.lang.Long" column="DVRDELIVERY_ID" />
			<key-property name="itemid" type="java.lang.Long" column="ITEM_ID"/>
			<key-property name="locationid" type="java.lang.Long" column="LOCATION_ID"/>
			<key-property name="position" type="java.lang.Integer" column="POSITION"/>
		</composite-id>


		<property name="pendingunits" type="java.lang.Double" not-null="true"></property>		
        <property name="availableunits" type="java.lang.Double" not-null="true"></property>
        <property name="receivedunits" type="java.lang.Double" not-null="true"></property>

		<many-to-one name="dvrorderdelivery" not-null="true" insert="false" update="false" 
			class="bbr.b2b.logistic.dvrdeliveries.entities.DvrOrderDelivery" >
			<column name="DVRORDER_ID"></column>
			<column name="DVRDELIVERY_ID"></column>			
		</many-to-one>		
		
		<many-to-one name="dvrpredeliverydetail"  not-null="true" insert="false" update="false"
			class="bbr.b2b.logistic.dvrorders.entities.DvrPreDeliveryDetail">
			<column name="DVRORDER_ID"></column>
			<column name="ITEM_ID"></column>	
			<column name="LOCATION_ID"></column>	
			<column name="POSITION"></column>
		</many-to-one>	
			
	
		<sql-query name="getAssignedDatingTotalizerDockByDateAndLocation">
			<![CDATA[
				WITH foo AS(
					SELECT DISTINCT
						dat.dvrdelivery_id,
						rd.dock_id	
					FROM
						logistica.dating AS dat JOIN
						logistica.reserve AS res ON res.id = dat.id JOIN
						logistica.reservedetail AS rd ON rd.reserve_id = res.id
					WHERE
						res.when1 >= :since AND res.when1 < :until AND res.location_id = :locationid),

				foo2 AS(
					SELECT
						foo.dock_id AS dockid, 
						SUM(bd.units) AS units,
						COUNT(DISTINCT bd.bulk_id) AS bulks
					FROM
						logistica.dvrdelivery AS dvrdel JOIN
						logistica.bulkdetail AS bd ON bd.dvrdelivery_id = dvrdel.id JOIN
						foo ON foo.dvrdelivery_id = dvrdel.id
					GROUP BY
						foo.dock_id)
				
				SELECT
					dk.id as dockid,
					COALESCE(f.units, 0.0) AS units,
					COALESCE(f.bulks, 0.0) AS bulks
				FROM
					logistica.dock AS dk JOIN
					logistica.location AS loc ON loc.id = dk.location_id LEFT JOIN
					foo2 AS f ON f.dockid = dk.id
				WHERE
					loc.id = :locationid AND dk.active is TRUE
				ORDER BY
					dk.id
			]]>
		</sql-query>
	
		<sql-query name="getDvrDeliveryDetailExcelReportByDelivery">
			<![CDATA[
				WITH dt AS (
						SELECT
							dt.dvrdelivery_id,
							(DATE(re.when1) + (MIN(mo.starts))\:\:time) AS confirmationdate
						FROM
							logistica.dating AS dt JOIN
							logistica.reserve AS re ON re.id = dt.id JOIN
							logistica.reservedetail AS rd ON rd.reserve_id = re.id JOIN
							logistica.module AS mo ON mo.id= rd.module_id
						WHERE
							dt.dvrdelivery_id = :dvrdeliveryid
						GROUP BY 
							dt.dvrdelivery_id, re.when1) 
				SELECT DISTINCT
					d.number AS deliverynumber,
					dst.description AS currentdeliverystatetypename,
					dllo.code AS deliverylocationcode,
					dllo.name AS deliverylocationname,
					dt.confirmationdate AS confirmationdate,
					o.number AS ordernumber,
					dtlo.code AS destinationlocationcode,
					dtlo.name AS destinationlocationname,
					it.sku AS itemsku,
					it.name AS itemname,
					odd.availableunits AS availableunits,
					odd.receivedunits AS receivedunits
				FROM
					logistica.dvrdelivery AS d JOIN
					logistica.location AS dllo ON dllo.id = d.deliverylocation_id JOIN
					logistica.dvrdeliverystatetype AS dst ON dst.id = d.currentstatetype_id LEFT JOIN
					dt ON dt.dvrdelivery_id = d.id JOIN
					logistica.dvrorderdelivery AS od ON od.dvrdelivery_id = d.id JOIN
					logistica.order AS o ON o.id = od.dvrorder_id JOIN
					logistica.dvrorderdeliverydetail AS odd ON odd.dvrorder_id = od.dvrorder_id AND odd.dvrdelivery_id = od.dvrdelivery_id JOIN
					logistica.location AS dtlo ON dtlo.id = odd.location_id JOIN
					logistica.item AS it ON it.id = odd.item_id
				WHERE
					d.id = :dvrdeliveryid
				ORDER BY 
					o.number, dtlo.code, it.sku
				]]>
		</sql-query>
			
		<sql-query name="countDvrDeliveryDetailExcelReportByDelivery">
			<![CDATA[               
			    SELECT 
			    	COUNT(dvrdelivery_id)
				FROM
					logistica.dvrorderdeliverydetail
				WHERE
					dvrdelivery_id IN (:dvrdeliveryid)
				]]>
		</sql-query>
		
		<sql-query name="doUpdateDvrOrderDeliveryDetails">
			<![CDATA[
				WITH bd AS(
						SELECT
							odd.dvrorder_id,
							odd.dvrdelivery_id,
							odd.location_id,
							odd.item_id,
							odd.position,
							COALESCE(SUM(bd.units), 0) AS units
						FROM
							logistica.dvrorderdeliverydetail AS odd LEFT JOIN
							logistica.bulkdetail AS bd ON bd.dvrorder_id = odd.dvrorder_id AND bd.dvrdelivery_id = odd.dvrdelivery_id AND
														  bd.location_id = odd.location_id AND bd.item_id = odd.item_id AND bd.position = odd.position 
						WHERE
							odd.dvrdelivery_id = :dvrdeliveryid
						GROUP BY
							odd.dvrorder_id, odd.dvrdelivery_id, odd.location_id, odd.item_id, odd.position)
				UPDATE
					logistica.dvrorderdeliverydetail AS odd
				SET
					availableunits = bd.units
				FROM
					bd
				WHERE
					odd.dvrorder_id = bd.dvrorder_id AND odd.dvrdelivery_id = bd.dvrdelivery_id AND
					odd.location_id = bd.location_id AND odd.item_id = bd.item_id AND odd.position = bd.position					
			]]>
		</sql-query>
		
		
		<sql-query name="deleteDvrOrderDeliveryDetailByDvrDeliveryById">
			<![CDATA[
				delete from logistica.dvrorderdeliverydetail where dvrdelivery_id = :dvrdeliveryid 
			]]>
		</sql-query>
					
    </class>
</hibernate-mapping>
