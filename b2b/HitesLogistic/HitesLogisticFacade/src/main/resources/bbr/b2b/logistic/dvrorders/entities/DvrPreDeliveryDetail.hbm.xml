<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.logistic.dvrorders.entities.DvrPreDeliveryDetail" table="DVRPREDELIVERYDETAIL" 
		entity-name="bbr.b2b.logistic.dvrorders.entities.DvrPreDeliveryDetail" schema="LOGISTICA">
		
		<composite-id name="id" class="bbr.b2b.logistic.dvrorders.entities.DvrPreDeliveryDetailId">
			<key-property name="dvrorderid" type="java.lang.Long" column="DVRORDER_ID"/>
			<key-property name="itemid" type="java.lang.Long" column="ITEM_ID"/>
			<key-property name="locationid" type="java.lang.Long" column="LOCATION_ID"/>
			<key-property name="position" type="java.lang.Integer" column="POSITION"/>			
		</composite-id>
		
		
		<property name="totalunits" type="java.lang.Double" column="TOTALUNITS"/>		
		<property name="todeliveryunits" type="java.lang.Double" column="TODELIVERYUNITS"/>	
		<property name="receivedunits" type="java.lang.Double" column="RECEIVEDUNITS"/>	
		<property name="pendingunits" type="java.lang.Double" column="PENDINGUNITS"/>
		<property name="totalneed" type="java.lang.Double" column="TOTALNEED"/>	
		<property name="totaltodelivery" type="java.lang.Double" column="TOTALTODELIVERY"/>	
		<property name="totalreceived" type="java.lang.Double" column="TOTALRECEIVED"/>	
		<property name="totalpending" type="java.lang.Double" column="TOTALPENDING"/>
		

		<many-to-one name="dvrorderdetail" not-null="true" insert="false" update="false" 
			class="bbr.b2b.logistic.dvrorders.entities.DvrOrderDetail">
			<column name="DVRORDER_ID"></column>
			<column name="ITEM_ID"></column>
			<column name="POSITION"></column>
		</many-to-one>
		
		<many-to-one name="location"
			class="bbr.b2b.logistic.locations.entities.Location" column="LOCATION_ID"
			not-null="true" insert="false" update="false" />		
			
			
		<sql-query name="doCalculateTotalDvrPredelivery">
			<![CDATA[
				WITH FOO1 AS( 
					SELECT 
					PRE.DVRORDER_ID, 
					PRE.ITEM_ID, 
					PRE.LOCATION_ID, 
					PRE.TOTALUNITS AS UNITS, 
					OD.FINALCOST 
					FROM 
					LOGISTICA.DVRPREDELIVERYDETAIL AS PRE, 
					LOGISTICA.DVRORDERDETAIL AS OD, 
					LOGISTICA.DVRORDER AS ORD, 
					LOGISTICA.DVRORDERSTATETYPE AS OST
					WHERE 
					PRE.DVRORDER_ID = OD.DVRORDER_ID 
					AND ORD.ID = OD.DVRORDER_ID 
					AND PRE.DVRORDER_ID = ORD.ID 
					AND ORD.CURRENTSTATETYPE_ID = OST.ID 
					AND PRE.ITEM_ID = OD.ITEM_ID 
					AND PRE.DVRORDER_ID IN (:dvrorderids)
				), 

				FOO2 AS ( 
					SELECT 	
					PRE.DVRORDER_ID, 
					PRE.ITEM_ID, 
					PRE.LOCATION_ID, 
					COALESCE(ODD.AVAILABLEUNITS, 0) AS AVAILABLEUNITS, 
					COALESCE(ODD.RECEIVEDUNITS, 0) AS RECEIVEDUNITS, 	
					CASE 	WHEN DST.VALID IS FALSE THEN 0 		 
							ELSE 	CASE WHEN ODD.AVAILABLEUNITS - ODD.RECEIVEDUNITS  > 0 THEN  ODD.AVAILABLEUNITS - ODD.RECEIVEDUNITS 			
									ELSE 0 
							END 
					END AS TODELIVERYUNITS 	
					FROM LOGISTICA.DVRPREDELIVERYDETAIL AS PRE 		
					LEFT JOIN LOGISTICA.DVRORDERDELIVERYDETAIL AS ODD 	
					ON ODD.DVRORDER_ID = PRE.DVRORDER_ID 
					AND ODD.ITEM_ID  = PRE.ITEM_ID  
					AND ODD.LOCATION_ID = PRE.LOCATION_ID 
					LEFT JOIN LOGISTICA.DVRORDERDELIVERY AS OD 
					ON ODD.DVRORDER_ID = OD.DVRORDER_ID
					AND ODD.DVRDELIVERY_ID = OD.DVRDELIVERY_ID 
					LEFT JOIN LOGISTICA.DVRDELIVERY AS DEL 	
					ON OD.DVRDELIVERY_ID = DEL.ID 	
					LEFT JOIN LOGISTICA.DVRDELIVERYSTATETYPE AS DST 
					ON  DEL.currentstatetype_id = DST.ID 	
					WHERE PRE.DVRORDER_ID IN (:dvrorderids)  
				) ,

				FOO21 AS(
					SELECT 	
					FOO2.DVRORDER_ID, 
					FOO2.ITEM_ID, 
					FOO2.LOCATION_ID, 
					SUM(FOO2.AVAILABLEUNITS) AS AVAILABLEUNITS, 
					SUM(RECEIVEDUNITS) AS RECEIVEDUNITS, 	
					SUM(TODELIVERYUNITS) AS TODELIVERYUNITS
					FROM FOO2
					GROUP BY FOO2.DVRORDER_ID, 
					FOO2.ITEM_ID, 
					FOO2.LOCATION_ID
				),

	   			FOO3 AS(
				   SELECT 
				   FOO1.DVRORDER_ID AS DVRORDERID, 
				   FOO1.ITEM_ID AS ITEMID, 
				   FOO1.LOCATION_ID  AS LOCATIONID, 
				   FOO1.UNITS,
				   FOO21.TODELIVERYUNITS,
				   FOO21.RECEIVEDUNITS,
				   (FOO1.UNITS - (FOO21.RECEIVEDUNITS + FOO21.TODELIVERYUNITS)) as pendingunits,
				   (FOO21.TODELIVERYUNITS * FOO1.FINALCOST) AS TOTALTODELIVERY, 
				   (FOO21.RECEIVEDUNITS * FOO1.FINALCOST) AS TOTALRECEIVED, 
				   ((FOO1.UNITS - (FOO21.RECEIVEDUNITS + FOO21.TODELIVERYUNITS)) * FOO1.FINALCOST) AS TOTALPENDING, 
				   (FOO1.UNITS * FOO1.FINALCOST) AS TOTALNEED 
				   FROM FOO1 
				   LEFT JOIN FOO21
				   ON FOO1.DVRORDER_ID = FOO21.DVRORDER_ID 
				   AND FOO1.ITEM_ID = FOO21.ITEM_ID 
				   AND FOO1.LOCATION_ID = FOO21.LOCATION_ID 
				)
					
				UPDATE LOGISTICA.DVRPREDELIVERYDETAIL
				SET pendingunits = FOO3.PENDINGUNITS,
					receivedunits = FOO3.RECEIVEDUNITS,
					todeliveryunits = FOO3.TODELIVERYUNITS,
					totalneed = FOO3.TOTALNEED,
					totalpending = FOO3.TOTALPENDING,
					totalreceived = FOO3.TOTALRECEIVED,
					totaltodelivery = FOO3.TOTALTODELIVERY
	  			FROM FOO3
	  			WHERE FOO3.DVRORDERID = DVRORDER_ID
	  			AND FOO3.ITEMID = ITEM_ID
	  			AND FOO3.LOCATIONID = LOCATION_ID;
			
			]]>
		</sql-query>
		
		<sql-query name="getDvrPredeliveryDetailExcelReportByOrder">
			<![CDATA[
				WITH at AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							st.id,
							st.value AS stylevalue,
							se.id,
							se.value AS seasonvalue,
							de.id,
							de.value AS departmentvalue,
							si.id,
							si.value AS sizevalue,
							co.id,
							co.value AS colorvalue
						FROM
							logistica.dvrorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute st ON st.item_id = it.id AND st.attributetype = 'ESTILO' LEFT JOIN
							logistica.itemattribute se ON se.item_id = it.id AND se.attributetype = 'TEMPORADA' LEFT JOIN
							logistica.itemattribute de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
							logistica.itemattribute si ON si.item_id = it.id AND si.attributetype = 'TALLA' LEFT JOIN
							logistica.itemattribute co ON co.item_id = it.id AND co.attributetype = 'COLOR'
						WHERE
							od.dvrorder_id = :dvrorderid
						ORDER BY
							it.id, st.id, se.id, de.id, si.id, co.id)							
				SELECT DISTINCT
					o.number AS number,
					vd.dni AS vendordni,
					vd.tradename AS vendortradename,
					dllo.code AS deliverylocationcode,
					dllo.name AS deliverylocationname,
					dtlo.code AS destinationlocationcode,
					dtlo.name AS destinationlocationname,
					od.barcode1 AS detailbarcode1,
					it.sku AS itemsku,
					COALESCE(vi.vendoritemcode, '') AS vendoritemcode,
					COALESCE(stylevalue, '') AS style,
					o.emitted AS emitted,
					ot.deliverydate AS deliverydate,
					ot.expiration AS expiration,
					COALESCE(seasonvalue, '') AS season,
					COALESCE(departmentvalue, '') AS department,
					it.name AS itemname,
					COALESCE(sizevalue, '') AS size,
					COALESCE(colorvalue, '') AS color,
					pdd.totalunits AS totalunits,
					pdd.todeliveryunits AS todeliveryunits,
					pdd.receivedunits AS receivedunits,
					pdd.pendingunits AS pendingunits,
					od.finalcost AS finalcost
				FROM
					logistica.order AS o JOIN
					logistica.ordertype AS oty ON oty.id = o.ordertype_id JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.location AS dllo ON dllo.id = ot.deliverylocation_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = ot.id JOIN
					logistica.dvrpredeliverydetail AS pdd ON pdd.dvrorder_id = od.dvrorder_id AND pdd.item_id = od.item_id AND pdd.position = od.position JOIN
					logistica.location AS dtlo ON dtlo.id = pdd.location_id JOIN
					logistica.item AS it ON it.id = pdd.item_id LEFT JOIN
					logistica.vendoritem AS vi ON vi.item_id = it.id AND vi.vendor_id = o.vendor_id LEFT JOIN
					at ON at.item_id = it.id
				WHERE
					o.id = :dvrorderid
				ORDER BY 
					it.sku
				]]>
		</sql-query>
			
			
	</class>
</hibernate-mapping>
