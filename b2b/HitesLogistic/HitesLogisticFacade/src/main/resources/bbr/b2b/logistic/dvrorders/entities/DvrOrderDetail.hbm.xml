<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.logistic.dvrorders.entities.DvrOrderDetail" table="DVRORDERDETAIL" 
		entity-name="bbr.b2b.logistic.dvrorders.entities.DvrOrderDetail" schema="LOGISTICA">

		<composite-id name="id" class="bbr.b2b.logistic.dvrorders.entities.DvrOrderDetailId">
			<key-property name="dvrorderid" type="java.lang.Long" column="DVRORDER_ID" />
			<key-property name="itemid" type="java.lang.Long" column="ITEM_ID" />
			<key-property name="position" type="java.lang.Integer" column="POSITION"/>			
		</composite-id>
		
		<property name="basecost" type="java.lang.Double" column="BASECOST"/>	
		<property name="finalcost" type="java.lang.Double" column="FINALCOST"/>	
		<property name="umbbarcode" type="java.lang.String" column="UMBBARCODE" length="250"/>
		<property name="umbdescription" type="java.lang.String" column="UMBDESCRIPTION" length="250"/>
		<property name="umcbarcode" type="java.lang.String" column="UMCBARCODE" length="250"/>
		<property name="umcdescription" type="java.lang.String" column="UMCDESCRIPTION" length="250"/>
		<property name="umbxumc" type="java.lang.Double" column="UMBXUMC"/>
		<property name="umccode" type="java.lang.String" column="UMCCODE" length="250"/>
		<property name="umbcode" type="java.lang.String" column="UMBCODE" length="250"/>
		<property name="totalunits" type="java.lang.Double" column="TOTALUNITS"/>		
		<property name="todeliveryunits" type="java.lang.Double" column="TODELIVERYUNITS"/>	
		<property name="receivedunits" type="java.lang.Double" column="RECEIVEDUNITS"/>	
		<property name="pendingunits" type="java.lang.Double" column="PENDINGUNITS"/>
		<property name="totalneed" type="java.lang.Double" column="TOTALNEED"/>	
		<property name="totaltodelivery" type="java.lang.Double" column="TOTALTODELIVERY"/>	
		<property name="totalreceived" type="java.lang.Double" column="TOTALRECEIVED"/>	
		<property name="totalpending" type="java.lang.Double" column="TOTALPENDING"/>
		<property name="tolerance" type="java.lang.Integer" column="TOLERANCE"/>
		<property name="innerpack" type="java.lang.String" column="INNERPACK"/>
		<property name="casepack" type="java.lang.String" column="CASEPACK"/>
		<property name="itemdeliverydate" type="java.time.LocalDateTime" column="ITEMDELIVERYDATE"/>
		<property name="comment" type="java.lang.String" column="COMMENT"/>
		<property name="normalprice" type="java.lang.Double" column="NORMALPRICE"/>
		<property name="offerprice" type="java.lang.Double" column="OFFERPRICE"/>					
		<property name="barcode1" type="java.lang.String" column="BARCODE1"/>
		<property name="barcode2" type="java.lang.String" column="BARCODE2"/>
			
		<many-to-one name="dvrorder" 
			class="bbr.b2b.logistic.dvrorders.entities.DvrOrder" column="DVRORDER_ID" 
			not-null="true" insert="false" update="false" />
			
		<many-to-one name="item" 
			class="bbr.b2b.logistic.items.entities.Item" column="ITEM_ID" 
			not-null="true" insert="false" update="false" />		


		<sql-query name="doCalculateTotalDvrOrderDetail">
			<![CDATA[		
				WITH FOO AS(
					SELECT 
						dvrorder_id AS dvrorderid,
						item_id as itemid,
						SUM(totalunits) as totalunits,
						SUM(todeliveryunits) as todeliveryunits,
						SUM(receivedunits) as receivedunits,
						SUM(pendingunits) as pendingunits,
						SUM(totaltodelivery) as totaltodelivery,
						SUM(totalreceived) as totalreceived,
						SUM(totalpending) as totalpending,
						SUM(totalneed) as totalneed
					FROM logistica.dvrpredeliverydetail
					WHERE dvrorder_id in (:dvrorderids) 
					GROUP BY dvrorder_id, item_id
				)

				UPDATE LOGISTICA.DVRORDERDETAIL
				SET pendingunits = FOO.PENDINGUNITS,
				receivedunits = FOO.RECEIVEDUNITS,
				todeliveryunits = FOO.TODELIVERYUNITS,
				totalneed = FOO.TOTALNEED,
				totalpending = FOO.TOTALPENDING,
				totalreceived = FOO.TOTALRECEIVED,
				totaltodelivery = FOO.TOTALTODELIVERY
				FROM FOO
				WHERE FOO.DVRORDERID = DVRORDER_ID
				AND FOO.ITEMID = ITEM_ID;
			]]>
		</sql-query>
		
		<sql-query name="getDvrOrderDetailExcelReportByOrder">
			<![CDATA[
				WITH at AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							st.id,
							st.value AS stylevalue,
							se.id,
							se.value AS seasonvalue,
							de.id,
							de.value AS departmentvalue,
							si.id,
							si.value AS sizevalue,
							co.id,
							co.value AS colorvalue
						FROM
							logistica.dvrorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute st ON st.item_id = it.id AND st.attributetype = 'ESTILO' LEFT JOIN
							logistica.itemattribute se ON se.item_id = it.id AND se.attributetype = 'TEMPORADA' LEFT JOIN
							logistica.itemattribute de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
							logistica.itemattribute si ON si.item_id = it.id AND si.attributetype = 'TALLA' LEFT JOIN
							logistica.itemattribute co ON co.item_id = it.id AND co.attributetype = 'COLOR'
						WHERE
							od.dvrorder_id = :dvrorderid
						ORDER BY
							it.id, st.id, se.id, de.id, si.id, co.id)							
				SELECT DISTINCT
					o.number AS number,
					vd.dni AS vendordni,
					vd.tradename AS vendortradename,
					dllo.code AS deliverylocationcode,
					dllo.name AS deliverylocationname,
					dtlo.code AS destinationlocationcode,
					dtlo.name AS destinationlocationname,
					od.barcode1 AS detailbarcode1,
					it.sku AS itemsku,
					COALESCE(vi.vendoritemcode, '') AS vendoritemcode,
					COALESCE(stylevalue, '') AS style,
					o.emitted AS emitted,
					ot.deliverydate AS deliverydate,
					ot.expiration AS expiration,
					COALESCE(seasonvalue, '') AS season,
					COALESCE(departmentvalue, '') AS department,
					it.name AS itemname,
					COALESCE(sizevalue, '') AS size,
					COALESCE(colorvalue, '') AS color,
					pdd.totalunits AS totalunits,
					pdd.todeliveryunits AS todeliveryunits,
					pdd.receivedunits AS receivedunits,
					pdd.pendingunits AS pendingunits,
					od.finalcost AS finalcost
				FROM
					logistica.order AS o JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.location AS dllo ON dllo.id = ot.deliverylocation_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = ot.id JOIN
					logistica.dvrpredeliverydetail AS pdd ON pdd.dvrorder_id = od.dvrorder_id AND pdd.item_id = od.item_id AND pdd.position = od.position JOIN
					logistica.location AS dtlo ON dtlo.id = pdd.location_id JOIN
					logistica.item AS it ON it.id = pdd.item_id LEFT JOIN
					logistica.vendoritem AS vi ON vi.item_id = it.id AND vi.vendor_id = o.vendor_id LEFT JOIN
					at ON at.item_id = it.id
				WHERE
					o.id = :dvrorderid
				ORDER BY 
					o.number
				]]>
		</sql-query>
			
		<sql-query name="countDvrOrderDetailExcelReportByOrder">
			<![CDATA[               
			    SELECT 
			    	COUNT(dvrorder_id)
				FROM
					logistica.dvrpredeliverydetail
				WHERE
					dvrorder_id = :dvrorderid
				]]>
		</sql-query>

		<sql-query name="getDvhOrderDetailExcelReportByOrder">
			<![CDATA[
				WITH oat AS (
						SELECT DISTINCT ON (o.id)
							o.id AS order_id,
							rt.id,
							rt.value AS routevalue,
							bx.id,
							bx.value AS boxvalue
						FROM
							logistica.dvrorder AS o LEFT JOIN
							logistica.orderattribute AS rt ON rt.order_id = o.id AND rt.attributetype = 'RUTA' LEFT JOIN
							logistica.orderattribute AS bx ON bx.order_id = o.id AND bx.attributetype = 'CAJA'
						WHERE
							o.id = :dvhorderid
						ORDER BY
							o.id, rt.id, bx.id),
					 iat AS (
						SELECT DISTINCT ON (it.id)
							it.id AS item_id,
							de.id,
							de.value AS departmentvalue,
							sc.id,
							sc.value AS shortcodevalue
						FROM
							logistica.dvrorderdetail AS od JOIN
							logistica.item AS it ON it.id = od.item_id LEFT JOIN
							logistica.itemattribute AS de ON de.item_id = it.id AND de.attributetype = 'DEPARTAMENTO' LEFT JOIN
							logistica.itemattribute AS sc ON sc.item_id = it.id AND sc.attributetype = 'CODIGO_CORTO'
						WHERE
							od.dvrorder_id = :dvhorderid
						ORDER BY
							it.id, de.id, sc.id)
				SELECT DISTINCT
					o.number AS number,
					COALESCE(ot.referencenumber, '') AS referencenumber,
					o.emitted AS emitted,
					ot.expiration AS expiration,
					ot.deliverydate AS deliverydate,
					ot.client_delivery_date AS clientdeliverydate,
					vd.dni AS vendordni,
					vd.tradename AS vendortradename,
					dll.code AS deliverylocationcode,
					dll.name AS deliverylocationname,
					COALESCE(sll.code, '') AS salelocationcode,
					COALESCE(sll.name, '') AS salelocationname,
					COALESCE(iat.departmentvalue, '') AS departmentname,
					COALESCE(oat.routevalue, '') AS route,
					cl.dni AS clientdni,
					cl.name AS clientname,
					COALESCE(cl.address, '') AS clientaddress,
					COALESCE(cl.commune, '') AS clientcommune,
					COALESCE(cl.city, '') AS clientcity,
					COALESCE(cl.phone, '') AS clientphone,
					COALESCE(cl.email, '') AS clientemail,
					COALESCE(cl.comment, '') AS clientcomment,
					COALESCE(oat.boxvalue, '') AS boxnumber,
					it.sku AS itemsku,
					it.name AS itemname,
					COALESCE(iat.shortcodevalue, '') AS itemshortcode,
					od.barcode1 AS itembarcode1,
					od.normalprice AS normalprice,
					od.finalcost AS finalcost,
					od.totalunits AS totalunits
				FROM
					logistica.order AS o JOIN
					logistica.dvrorder AS ot ON ot.id = o.id JOIN 
					logistica.vendor AS vd ON vd.id = o.vendor_id JOIN
					logistica.location AS dll ON dll.id = ot.deliverylocation_id LEFT JOIN
					logistica.location AS sll ON sll.id = ot.salelocation_id JOIN
					logistica.client AS cl ON cl.id = o.client_id JOIN
					logistica.dvrorderdetail AS od ON od.dvrorder_id = ot.id JOIN
					logistica.item AS it ON it.id = od.item_id LEFT JOIN
					oat ON oat.order_id = o.id LEFT JOIN
					iat ON iat.item_id = it.id
				WHERE
					o.id = :dvhorderid
				ORDER BY
					o.number
				]]>
		</sql-query>
		
		<sql-query name="countDvhOrderDetailExcelReportByOrder">
			<![CDATA[               
			    SELECT 
			    	COUNT(dvrorder_id)
				FROM
					logistica.dvrorderdetail
				WHERE
					dvrorder_id = :dvhorderid
				]]>
		</sql-query>
		
	</class>
</hibernate-mapping>
