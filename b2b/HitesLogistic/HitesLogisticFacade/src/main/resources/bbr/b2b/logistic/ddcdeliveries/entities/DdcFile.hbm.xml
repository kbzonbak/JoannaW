<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.logistic.ddcdeliveries.entities.DdcFile" table="DDCFILE" 
		entity-name="bbr.b2b.logistic.ddcdeliveries.entities.DdcFile" schema="LOGISTICA">
		<id name="id" type="java.lang.Long">
			<column name="ID" />
			<generator class="identity">
				<param name="sequence">DDCFILE_SEQUENCE</param>
				<param name="parameters">AS BIGINT CACHE 100</param>
			</generator>
		</id>
		
		<property name="when" type="java.time.LocalDateTime" column="WHEN1" not-null="true"/>
		<property name="filename" type="java.lang.String" column="FILENAME" length="250" not-null="false"/>
		<property name="filetype" type="java.lang.String" column="FILETYPE" length="50" not-null="false"/>
		
		<many-to-one name="ddcorder"
			class="bbr.b2b.logistic.ddcorders.entities.DdcOrder" column="DDCORDER_ID"
			not-null="true"/>
		
		<sql-query name="getDdcFilesByDdcOrders">
			<![CDATA[
				SELECT
					ddcf.id AS ddcfileid,
					ddcf.filename AS ddcfilename,
					ddcf.filetype AS ddcfiletype,
					oc.id AS ddcorderid,
					oc.number AS ddcordernumber
				FROM
					logistica.ddcfile AS ddcf JOIN
					logistica.order AS oc ON oc.id = ddcf.ddcorder_id
				WHERE
					oc.id IN (:ddcorderids);
			]]>
		</sql-query>
		
	</class>
</hibernate-mapping>