<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.regional.logistic.datings.entities.ReserveDetail" table="RESERVEDETAIL" 
		entity-name="bbr.b2b.regional.logistic.datings.entities.ReserveDetail" schema="LOGISTICA">
		
		<composite-id name="id" class="bbr.b2b.regional.logistic.datings.entities.ReserveDetailId">
			<key-property name="reserveid" type="java.lang.Long" access="field" column="RESERVE_ID"/>
			<key-property name="moduleid" type="java.lang.Long" access="field" column="MODULE_ID"/>	
			<key-property name="dockid" type="java.lang.Long" access="field" column="DOCK_ID"/>			
		</composite-id>
		
		<property name="when" type="timestamp" column="WHEN1" not-null="true"/>
		
		<many-to-one name="datingresource" 
			class="bbr.b2b.regional.logistic.datings.entities.DatingResource" 
			not-null="true" insert="false" update="false">
			<column name="DOCK_ID"></column>			
			<column name="MODULE_ID"></column>
		</many-to-one>		
		
		<many-to-one name="reserve"
			class="bbr.b2b.regional.logistic.datings.entities.Reserve" column="RESERVE_ID"
			not-null="true" insert="false" update="false"/>
				
		<sql-query name="getReserveDetailByDateAndLocationAndDelivery">
			<![CDATA[               
				SELECT
					RD.RESERVE_ID AS RESERVEID,
					RD.DOCK_ID AS DOCKID,
					RD.MODULE_ID AS MODULEID,
					RD.WHEN1 AS WHEN	
				FROM
					LOGISTICA.DELIVERY DL JOIN
					LOGISTICA.LOCATION LO ON LO.ID = DL.DELIVERYLOCATION_ID JOIN
					LOGISTICA.RESERVE RS ON LO.ID = RS.LOCATION_ID JOIN
					LOGISTICA.RESERVEDETAIL RD ON RD.RESERVE_ID = RS.ID
				WHERE 
					DL.ID = :deliveryid AND
					LO.ID = :locationid AND
					RS.WHEN1 = :date
			]]>
		</sql-query>
		
		<sql-query name="getReserveDetailsByDateAndLocation">
			<![CDATA[               
				SELECT
					RD.RESERVE_ID AS RESERVEID,
					RD.DOCK_ID AS DOCKID,
					RD.MODULE_ID AS MODULEID,
					RD.WHEN1 AS WHEN
				FROM 
					LOGISTICA.RESERVEDETAIL RD JOIN
					LOGISTICA.RESERVE RS ON RD.RESERVE_ID = RS.ID
				WHERE 
					RS.WHEN1 >= :since AND
					RS.WHEN1 < :until AND
					RS.LOCATION_ID = :locationid 
			]]>
		</sql-query>	
		
		<sql-query name="getAssignedDatingDetailsByDateLocationAndDockType">
			<![CDATA[
				WITH aa AS(
							SELECT 
								dt.delivery_id AS deliveryid,
								COALESCE(CAST(COUNT(bx.id) AS INT), 0) AS totalboxs,
								COALESCE(CAST(COUNT(pl.id) AS INT), 0) AS totalpallets
							FROM
								logistica.reserve AS rs JOIN
								logistica.dating AS dt ON dt.id = rs.id JOIN
								logistica.bulk AS bk ON bk.delivery_id = dt.delivery_id LEFT JOIN
								logistica.box AS bx ON bx.id = bk.id LEFT JOIN
								logistica.pallet AS pl ON pl.id = bk.id
							WHERE
								rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid 
							GROUP BY
								dt.delivery_id),
				     bb AS(
				     		SELECT 
								dt.delivery_id AS deliveryid,								
								SUM(odd.availableunits) AS availableunits
							FROM
								logistica.reserve AS rs JOIN
								logistica.dating AS dt ON dt.id = rs.id JOIN
								logistica.orderdeliverydetail AS odd ON odd.delivery_id = dt.delivery_id
							WHERE 
								rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid
							GROUP BY
								dt.delivery_id),
				    cc AS (
						SELECT 
							od.delivery_id AS deliveryid, 
							string_agg(cast(asnimp as varchar), '-' ORDER BY asnimp) as asnimp
						FROM logistica.reserve AS rs JOIN
							logistica.dating AS dt ON dt.id = rs.id JOIN
							logistica.orderdelivery AS od ON od.delivery_id = dt.delivery_id
						WHERE rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid 
						GROUP BY od.delivery_id
				    )				          
				SELECT
					dl.id AS deliveryid,
					dl.container AS containernumber,
					dst.name AS currentdeliverystate,
					dst.code AS currentdeliverystatecode,
					dt.name AS deliverytype,
					ft.name AS deliveryflowtype,
					da.id AS datingid,
					--da.number AS datingnumber,
					CASE WHEN vd.code = 'IMP' 
						 THEN CAST(cc.asnimp AS varchar)
						 ELSE CAST(da.number AS varchar)
						 END AS datingnumber,
					rd.module_id AS moduleid,
					rd.dock_id AS dockid,
					vd.rut AS vendorcode,
					vd.domestic AS domesticvendor,
					vd.name AS provider,					
					COALESCE(aa.totalboxs, 0) AS totalboxs,
					COALESCE(aa.totalpallets, 0) AS totalpallets,
					bb.availableunits AS availableunits
				FROM
					logistica.dating AS da JOIN
					logistica.delivery AS dl ON dl.id = da.delivery_id JOIN
					logistica.deliverystatetype AS dst ON dst.id = dl.currentstatetype_id JOIN
					logistica.deliverytype AS dt ON dt.id = dl.deliverytype_id JOIN
					logistica.flowtype AS ft ON ft.id = dl.flowtype_id JOIN
					logistica.vendor AS vd ON vd.id = dl.vendor_id JOIN
					logistica.reservedetail AS rd ON rd.reserve_id = da.id JOIN
					logistica.dock AS dk ON dk.id = rd.dock_id JOIN
					bb ON bb.deliveryid = dl.id LEFT JOIN 
					aa ON aa.deliveryid = dl.id LEFT JOIN
					cc ON cc.deliveryid = dl.id
				WHERE
					dk.docktype_id = :docktypeid
			]]>
		</sql-query>
		
		<sql-query name="getAssignedDatingDetailsByDateAndLocation">
			<![CDATA[
				WITH aa AS(
							SELECT 
								dt.delivery_id AS deliveryid,
								COALESCE(CAST(COUNT(bx.id) AS INT), 0) AS totalboxs,
								COALESCE(CAST(COUNT(pl.id) AS INT), 0) AS totalpallets
							FROM
								logistica.reserve AS rs JOIN
								logistica.dating AS dt ON dt.id = rs.id JOIN
								logistica.bulk AS bk ON bk.delivery_id = dt.delivery_id LEFT JOIN
								logistica.box AS bx ON bx.id = bk.id LEFT JOIN
								logistica.pallet AS pl ON pl.id = bk.id
							WHERE
								rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid 
							GROUP BY
								dt.delivery_id),
				     bb AS(
				     		SELECT 
								dt.delivery_id AS deliveryid,								
								SUM(odd.availableunits) AS availableunits
							FROM
								logistica.reserve AS rs JOIN
								logistica.dating AS dt ON dt.id = rs.id JOIN
								logistica.orderdeliverydetail AS odd ON odd.delivery_id = dt.delivery_id
							WHERE 
								rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid
							GROUP BY
								dt.delivery_id),
				    cc AS (
						SELECT 
							od.delivery_id AS deliveryid, 
							string_agg(cast(asnimp as varchar), '-' ORDER BY asnimp) as asnimp
						FROM logistica.reserve AS rs JOIN
							logistica.dating AS dt ON dt.id = rs.id JOIN
							logistica.orderdelivery AS od ON od.delivery_id = dt.delivery_id
						WHERE rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid 
						GROUP BY od.delivery_id
				    )				          
				SELECT
					dl.id AS deliveryid,
					dl.container AS containernumber,
					dst.name AS currentdeliverystate,
					dst.code AS currentdeliverystatecode,
					dt.name AS deliverytype,
					ft.name AS deliveryflowtype,
					da.id AS datingid,
					--da.number AS datingnumber,
					CASE WHEN vd.code = 'IMP' 
						 THEN CAST(cc.asnimp AS varchar)
						 ELSE CAST(da.number AS varchar)
						 END AS datingnumber,
					rd.module_id AS moduleid,
					rd.dock_id AS dockid,
					vd.rut AS vendorcode,
					vd.domestic AS domesticvendor,
					vd.name AS provider,					
					COALESCE(aa.totalboxs, 0) AS totalboxs,
					COALESCE(aa.totalpallets, 0) AS totalpallets,
					bb.availableunits AS availableunits
				FROM
					logistica.dating AS da JOIN
					logistica.delivery AS dl ON dl.id = da.delivery_id JOIN
					logistica.deliverystatetype AS dst ON dst.id = dl.currentstatetype_id JOIN
					logistica.deliverytype AS dt ON dt.id = dl.deliverytype_id JOIN
					logistica.flowtype AS ft ON ft.id = dl.flowtype_id JOIN
					logistica.vendor AS vd ON vd.id = dl.vendor_id JOIN
					logistica.reservedetail AS rd ON rd.reserve_id = da.id JOIN
					bb ON bb.deliveryid = dl.id LEFT JOIN 
					aa ON aa.deliveryid = dl.id LEFT JOIN
					cc ON cc.deliveryid = dl.id
			]]>
		</sql-query>
		
		<sql-query name="getAssignedResourceBlockingDetailsByDateLocationAndDockType">
			<![CDATA[               
				SELECT
					rs.id AS reserveid,
					rbg.id AS blockingroupid,
					rbg.who AS who,
					logistica.tostr(rbg.created) AS created,
					rbg.comment AS comment,
					rbg.reason AS reason,
					lo.name AS location,
					rd.module_id AS moduleid,
					rd.dock_id AS dockid
				FROM
					logistica.reserve AS rs JOIN 
					logistica.resourceblocking AS rb ON rb.id = rs.id JOIN 
					logistica.resourceblockinggroup AS rbg ON rbg.id = rb.blockinggroup_id JOIN
					logistica.location AS lo ON lo.id = rbg.location_id JOIN
					logistica.reservedetail AS rd ON rd.reserve_id = rs.id JOIN
					logistica.dock AS dk ON dk.id = rd.dock_id
				WHERE 
					rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid AND dk.docktype_id = :docktypeid
			]]>
		</sql-query>
		
		<sql-query name="getAssignedResourceBlockingDetailsByDateAndLocation">
			<![CDATA[               
				SELECT
					rs.id AS reserveid,
					rbg.id AS blockingroupid,
					rbg.who AS who,
					logistica.tostr(rbg.created) AS created,
					rbg.comment AS comment,
					rbg.reason AS reason,
					lo.name AS location,
					rd.module_id AS moduleid,
					rd.dock_id AS dockid
				FROM
					logistica.reserve AS rs JOIN 
					logistica.resourceblocking AS rb ON rb.id = rs.id JOIN 
					logistica.resourceblockinggroup AS rbg ON rbg.id = rb.blockinggroup_id JOIN
					logistica.location AS lo ON lo.id = rbg.location_id JOIN
					logistica.reservedetail AS rd ON rd.reserve_id = rs.id
				WHERE 
					rs.when1 >= :since AND rs.when1 < :until AND rs.location_id = :locationid
			]]>
		</sql-query>
		
		<sql-query name="getReserveDetailsOfBlockingGroup">
			<![CDATA[               
				SELECT
					RD.RESERVE_ID AS RESERVEID, 
					RD.MODULE_ID AS MODULEID, 
					RD.DOCK_ID AS DOCKID,
					RD.WHEN1 AS WHEN
				FROM 
					LOGISTICA.RESERVEDETAIL RD INNER JOIN 
					LOGISTICA.RESOURCEBLOCKING RB ON RD.RESERVE_ID = RB.ID
				WHERE 
					RB.BLOCKINGGROUP_ID = :reserveid
			]]>
		</sql-query>	
		<sql-query name="getDatingDetailsByDateAndLocationAndDockAndModule">
			<![CDATA[               
				SELECT
					RD.RESERVE_ID AS RESERVEID,
				 	RD.MODULE_ID AS MODULEID,
				 	RD.DOCK_ID AS DOCKID,
				 	RD.WHEN1 AS WHEN
				FROM 
					LOGISTICA.RESERVEDETAIL RD INNER JOIN 
					LOGISTICA.RESERVE R ON (RD.RESERVE_ID = R.ID)
				WHERE 
					R.WHEN1 = :when AND 
      				R.LOCATION_ID = :locationid AND 
	  				RD.DOCK_ID = :dockid AND
	  				RD.MODULE_ID = :moduleid 
			]]>
		</sql-query>	
		<sql-query name="getReserveDetailOfDelivery">
			<![CDATA[               
				SELECT
					DL.ID AS DELIVERYID,
					RS.ID AS RESERVEID,
					DO.ID AS DOCKID,
					MO.ID AS MODULEID,
					DO.CODE AS DOCKCODE,
					LOGISTICA.TOSTR(MO.STARTS) AS STARTS,
					LOGISTICA.TOSTR(MO.ENDS) AS ENDS					
				FROM
					LOGISTICA.DELIVERY DL JOIN
					LOGISTICA.DATING DT ON DL.ID = DT.DELIVERY_ID JOIN
					LOGISTICA.VENDOR VD ON DT.VENDOR_ID = VD.ID JOIN
					LOGISTICA.RESERVE RS ON RS.ID = DT.ID JOIN
					LOGISTICA.RESERVEDETAIL RD ON RD.RESERVE_ID = RS.ID JOIN
					LOGISTICA.DATINGRESOURCE DR ON DR.DOCK_ID = RD.DOCK_ID AND DR.MODULE_ID = RD.MODULE_ID JOIN
					LOGISTICA.DOCK DO ON DO.ID = DR.DOCK_ID JOIN
					LOGISTICA.MODULE MO ON MO.ID = DR.MODULE_ID
				WHERE
					DL.ID = :deliveryid AND
					VD.ID = :vendorid
				ORDER BY
					MO.STARTS
					
			]]>
		</sql-query>	
		<sql-query name="doDeleteReserveDetailofReserve">
			<![CDATA[               
				DELETE FROM 
					LOGISTICA.RESERVEDETAIL 
				WHERE 
					RESERVE_ID = :reserveid
			]]>
		</sql-query>
		
		
		<sql-query name="doDeleteReserveDetailsOfReserves">
			<![CDATA[		
				delete from LOGISTICA.RESERVEDETAIL where RESERVE_ID in (:reserveids)							
			]]>
		</sql-query>
		
		<sql-query name="getDatingDetailsByDateLocationDockAndModule">
			<![CDATA[		
				SELECT
					RD.RESERVE_ID AS RESERVEID,
				 	RD.MODULE_ID AS MODULEID,
				 	RD.DOCK_ID AS DOCKID,
				 	RD.WHEN1 AS WHEN
				FROM 
					LOGISTICA.RESERVEDETAIL RD INNER JOIN 
					LOGISTICA.RESERVE RS ON RD.RESERVE_ID = RS.ID
				WHERE 
					DATE(RS.WHEN1) = :when AND 
      				RS.LOCATION_ID = :locationid AND 
	  				RD.DOCK_ID = :dockid AND
	  				RD.MODULE_ID = :moduleid 							
			]]>
		</sql-query>
							
	</class>
</hibernate-mapping>
