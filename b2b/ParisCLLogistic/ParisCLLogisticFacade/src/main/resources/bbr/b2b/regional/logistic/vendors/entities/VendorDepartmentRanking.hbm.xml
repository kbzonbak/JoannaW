<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.regional.logistic.vendors.entities.VendorDepartmentRanking" table="VENDORDEPARTMENTRANKING"
		entity-name="bbr.b2b.regional.logistic.vendors.entities.VendorDepartmentRanking" schema="LOGISTICA">
		<composite-id name="id" class="bbr.b2b.regional.logistic.vendors.entities.VendorDepartmentRankingId">
			<key-property name="vendorid" type="java.lang.Long" column="VENDOR_ID" />
			<key-property name="rankingid" type="java.lang.Long" column="RANKING_ID" />
			<key-property name="departmentid" type="java.lang.Long" column="DEPARTMENT_ID" />
		</composite-id>

		<property name="totalreceivedunits" type="java.lang.Double"></property>
		<property name="totalavailableunits" type="java.lang.Double"></property>
		<property name="sumscoreweighed" type="java.lang.Double"></property>
        <property name="rejectedcount" type="java.lang.Integer"></property>
        <property name="nonassistancecount" type="java.lang.Integer"></property>
        <property name="approvedcount" type="java.lang.Integer"></property>
        
		<many-to-one name="department" 
			class="bbr.b2b.regional.logistic.vendors.entities.Department" column="DEPARTMENT_ID" 
			not-null="true" insert="false" update="false" />
		<many-to-one name="vendorranking" not-null="true" insert="false" update="false" 
			class="bbr.b2b.regional.logistic.vendors.entities.VendorRanking">
			<column name="VENDOR_ID"></column>
			<column name="RANKING_ID"></column>
		</many-to-one>
		
		<sql-query name="getVendorDepartmentRankingsByRankingId">
			<![CDATA[	
				WITH RK AS(
					SELECT
						VDR.VENDOR_ID,
						VDR.DEPARTMENT_ID,
						VDR.RANKING_ID,
						(IF (VDR.TOTALRECEIVEDUNITS > 0) (VDR.SUMSCOREWEIGHED / VDR.TOTALRECEIVEDUNITS) ELSE 0) AS RANKING
					FROM
						LOGISTICA.VENDORDEPARTMENTRANKING AS VDR)
				SELECT
					VD.ID AS VENDORID,
					VD.RUT AS VENDORRUT,
					VD.NAME AS VENDORNAME,
					DP.ID AS DEPARTMENTID,
					DP.CODE AS DEPARTMENTCODE,
					DP.NAME AS DEPARTMENTNAME,
					VDR.APPROVEDCOUNT,
					VDR.NONASSISTANCECOUNT,
					VDR.REJECTEDCOUNT,
					VDR.RANKING_ID AS RANKINGID,
					RK.RANKING,
					VC.NAME AS VENDORCLASSIFICATION
				FROM
					LOGISTICA.VENDORDEPARTMENTRANKING AS VDR JOIN
					LOGISTICA.VENDOR AS VD ON VD.ID = VDR.VENDOR_ID JOIN
					LOGISTICA.DEPARTMENT AS DP ON DP.ID = VDR.DEPARTMENT_ID JOIN
					RK ON RK.VENDOR_ID = VDR.VENDOR_ID AND RK.DEPARTMENT_ID = VDR.DEPARTMENT_ID AND RK.RANKING_ID = VDR.RANKING_ID JOIN
					LOGISTICA.VENDORCLASSIFICATION AS VC ON RK.RANKING >= VC.MIN AND RK.RANKING <= VC.MAX
				WHERE VR.RANKING_ID = rankingid
			]]>
		</sql-query>	
		
		<sql-query name="getOrderDeliveryEvaluationReportByVendorDepartmentRanking">
			<![CDATA[	
				SELECT
					ODE.DELIVERY AS DELIVERYNUMBER,
					ET.NAME AS EVALUATIONTYPE,
					ODE.ORDER1 AS ORDERNUMBER,
					LOGISTICA.TOSTR(ODE.DATINGDATE),
					date_part('MONTH', ODE.DATINGDATE) AS DATINGMONTH,
					ODE.TOTALAVAILABLEUNITS,
					ODE.TOTALRECEIVEDUNITS,
					ODE.DELIVERYSCORE,
					ODE.LEVELSERVICEPERCENT,
					ODE.QUALITYPERCENT
				FROM
					LOGISTICA.OCDELEVALUATION ODE
					JOIN LOGISTICA.EVALUATIONTYPE ET ON ET.ID = ODE.EVALUATIONTYPE_ID
					INNER JOIN LOGISTICA.VENDORDEPARTMENTRANKING VDR ON (VDR.RANKING_ID = ODE.RANKING_ID AND VDR.DEPARTMENT_ID = ODE.DEPARTMENT_ID AND VDR.VENDOR_ID = ODE.VENDOR_ID) 
				WHERE ODE.RANKING_ID = rankingid AND ODE.DEPARTMENT_ID = departmentid AND ODE.VENDOR_ID = vendorid
			]]>
		</sql-query>			
	</class>
</hibernate-mapping>
