<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<joined-subclass name="bbr.b2b.regional.logistic.datings.entities.Dating" table="DATING" 
		entity-name="bbr.b2b.regional.logistic.datings.entities.Dating" extends="bbr.b2b.regional.logistic.datings.entities.Reserve" schema="LOGISTICA">
		<key column ="ID" />
		
		<property name="number" type="java.lang.Long"/>
		<property name="comment" type="java.lang.String"/>
		<property name="confirmed" type="java.lang.Boolean"/>
		<property name="confirmationdate" type="timestamp"/>				
				
		<many-to-one name="vendor"
			class="bbr.b2b.regional.logistic.vendors.entities.Vendor" column="VENDOR_ID" 
			not-null="false" />		
			
		<many-to-one name="delivery"
			class="bbr.b2b.regional.logistic.deliveries.entities.Delivery" column="DELIVERY_ID" 
			not-null="true" />					
		
		<sql-query name="getFormattedDatingDateTime">
			<![CDATA[               
			SELECT
				to_char(re.when1, 'DD-MM-YYYY') || ' ' || to_char(MIN(mo.starts), 'HH24:MI')
			FROM
				logistica.reserve AS re JOIN
				logistica.reservedetail AS rd ON rd.reserve_id = re.id JOIN
				logistica.module AS mo ON mo.id = rd.module_id
			WHERE
				re.id = :datingid
			GROUP BY
				re.when1
				]]>
		</sql-query>
		
		<sql-query name="getDatingDataByDateAndLocation">
			<![CDATA[               
      			WITH dtn AS(
					SELECT
						od.delivery_id,
						array_to_string(array_agg(od.asnimp ORDER BY od.asnimp ASC), '-') AS numbers
					FROM
						logistica.orderdelivery AS od JOIN
						logistica.dating AS dt ON dt.delivery_id = od.delivery_id JOIN
						logistica.reserve AS re ON re.id = dt.id
					WHERE
						re.when1 >= :since AND re.when1 < :until AND re.location_id = :locationid
					GROUP BY
						od.delivery_id),
			     ad AS(
					SELECT
						ds.delivery_id,
						MAX(ds.when1) AS assigneddate
					FROM
						logistica.deliverystate AS ds JOIN
						logistica.deliverystatetype AS dst ON dst.id = ds.deliverystatetype_id JOIN
						logistica.dating AS dt ON dt.delivery_id = ds.delivery_id JOIN
						logistica.reserve AS re ON re.id = dt.id
					WHERE
						re.when1 >= :since AND re.when1 < :until AND re.location_id = :locationid AND dst.code = 'CITA_ASIGNADA'
					GROUP BY
						ds.delivery_id)
			SELECT
				dt.id AS id,
				CASE WHEN vd.domestic
						THEN CAST(dt.number AS VARCHAR)
						ELSE dtn.numbers
						END AS number,
				logistica.tostr(re.when1) AS when,
				dt.confirmed AS confirmed,
				COALESCE(logistica.tostr(dt.confirmationdate), '') AS confirmationdate,
				COALESCE(logistica.tostr(ad.assigneddate), '') AS assigneddate,
				COALESCE(dt.comment, '') AS comment,
				dt.vendor_id AS vendorid,
				dt.delivery_id AS deliveryid,
				re.location_id AS locationid
			FROM
				logistica.dating AS dt JOIN
				logistica.reserve AS re ON re.id = dt.id JOIN
				dtn ON dtn.delivery_id = dt.delivery_id JOIN
				logistica.vendor AS vd ON dt.vendor_id = vd.id LEFT JOIN
				ad ON ad.delivery_id = dt.delivery_id
			WHERE
				re.when1 >= :since AND re.when1 < :until AND re.location_id = :locationid
				]]>
		</sql-query>
		
		<sql-query name="getExcelDatingReport">
				<![CDATA[
				WITH AA AS (
					SELECT		
						OC.ID AS ORDERID,
						DL.ID AS DELIVERYID,
						ODD.LOCATION_ID AS LOCATIONID, 
						SUM(ODD.PENDINGUNITS) AS PENDINGUNITS,	
						SUM(ODD.AVAILABLEUNITS) AS AVAILABLEUNITS,
						SUM(ODD.RECEIVEDUNITS) AS RECEIVEDUNITS
					FROM 
						LOGISTICA.ORDER OC JOIN				 		  
				  		LOGISTICA.ORDERDELIVERYDETAIL ODD ON OC.ID = ODD.ORDER_ID JOIN
				  		LOGISTICA.DELIVERY DL ON DL.ID = ODD.DELIVERY_ID JOIN
						LOGISTICA.DATING DA ON DA.DELIVERY_ID = DL.ID JOIN
						LOGISTICA.RESERVE RE ON RE.ID = DA.ID
				   	WHERE 
				  		RE.WHEN1 >= :since AND
				  		RE.WHEN1 <= :until AND
				  		RE.LOCATION_ID = :locationid
				    GROUP BY
				  		OC.ID,
				  		DL.ID,
						ODD.LOCATION_ID 				
				),
				
				BB AS (
					SELECT
						DL.ID AS DELIVERYID,
						MAX(DS.WHEN1) AS STATEDATE
				   	FROM
						LOGISTICA.DELIVERY DL JOIN
						LOGISTICA.DELIVERYSTATE DS ON DL.ID = DS.DELIVERY_ID JOIN
						LOGISTICA.DELIVERYSTATETYPE DST ON DST.ID = DS.DELIVERYSTATETYPE_ID JOIN
						AA ON AA.DELIVERYID = DL.ID		 
				  	WHERE 
						DST.CODE = 'CITA_ASIGNADA'						 
				  	GROUP BY
						DL.ID				
				)
				
				SELECT	 
          			OC.ID AS ORDERID,
					DL.ID AS DELIVERYID, 
					TO_CHAR(RE.WHEN1, 'dd-MM-yyyy') AS REQUESTEDDATE,
					TO_CHAR(MIN(MO.STARTS), 'HH24:mi') AS STARTS,
					TO_CHAR(MAX(MO.ENDS), 'HH24:mi') AS ENDS,
					DO.CODE AS DOCKCODE,
					VD.RUT AS VENDORRUT,
					VD.NAME AS  VENDORNAME,
					SE.NAME AS SECTIONNAME,
					SE.CODE AS SECTIONCODE,
					DL.NUMBER AS DELIVERYNUMBER,
					DST.NAME AS DELIVERYSTATETYPE,
					OC.NUMBER AS ORDERNUMBER,
					OT.NAME AS ORDERTYPE,
					TO_CHAR(BB.STATEDATE, 'dd-MM-yyyy HH24:mi') AS ASIGNEDDATE,
					LO.NAME AS LOCATIONNAME,
					LO.CODE AS LOCATIONCODE,
					AA.PENDINGUNITS,
					AA.AVAILABLEUNITS,
					AA.RECEIVEDUNITS
				FROM
				  	LOGISTICA.ORDER OC JOIN
				 	LOGISTICA.ORDERTYPE OT ON OT.ID = OC.ORDERTYPE_ID JOIN
				  	AA ON AA.ORDERID = OC.ID JOIN
				  	LOGISTICA.DELIVERY DL ON DL.ID = AA.DELIVERYID JOIN
					LOGISTICA.DATINGREQUEST DR ON DR.DELIVERY_ID = DL.ID JOIN
				  	LOGISTICA.VENDOR VD ON VD.ID = DL.VENDOR_ID JOIN
				  	LOGISTICA.DELIVERYSTATETYPE DST ON DST.ID = DL.CURRENTDELIVERYSTATETYPE_ID JOIN
				  	LOGISTICA.DATING DA ON DA.DELIVERY_ID = DL.ID JOIN
					LOGISTICA.RESERVE RE ON RE.ID = DA.ID JOIN
				  	LOGISTICA.RESERVEDETAIL RSD ON RSD.RESERVE_ID = RE.ID JOIN
			 	  	LOGISTICA.MODULE MO ON MO.ID = RSD.MODULE_ID JOIN
				  	LOGISTICA.DOCK DO ON DO.ID = RSD.DOCK_ID JOIN
					BB ON BB.DELIVERYID = DL.ID	JOIN
					LOGISTICA.SECTION AS SE ON OC.SECTION_ID = SE.ID JOIN
					LOGISTICA.LOCATION AS LO ON AA.LOCATIONID = LO.ID			  	
				GROUP BY
				  	OC.ID,
				  	DL.ID, 
				  	RE.WHEN1,
				  	DO.CODE,
				  	VD.RUT,
				  	VD.NAME,
					SE.NAME,
					SE.CODE,
				  	DL.NUMBER,
				  	DST.NAME,
				  	OC.NUMBER,
				  	OT.NAME,
				  	BB.STATEDATE,
					LO.NAME,
					LO.CODE,
					AA.PENDINGUNITS,
					AA.AVAILABLEUNITS,
					AA.RECEIVEDUNITS
				ORDER BY 
				  	RE.WHEN1
				]]>
			</sql-query>
							
	</joined-subclass>
</hibernate-mapping>
