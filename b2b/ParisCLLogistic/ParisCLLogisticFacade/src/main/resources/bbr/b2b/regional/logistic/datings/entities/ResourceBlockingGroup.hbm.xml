<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="bbr.b2b.regional.logistic.datings.entities.ResourceBlockingGroup" table="RESOURCEBLOCKINGGROUP" 
		entity-name="bbr.b2b.regional.logistic.datings.entities.ResourceBlockingGroup" schema="LOGISTICA">
		<id name="id" type="java.lang.Long">
			<column name="ID" />
			<generator class="identity">
				<param name="sequence">RESOURCEBLOCKINGGROUP_SEQUENCE</param>
				<param name="parameters">AS BIGINT CACHE 100</param>
			</generator>
		</id>
		
		<property name="comment" type="java.lang.String" length="250"/>
		<property name="created" type="timestamp"/>				
		<property name="reason" type="java.lang.String" length="250"/>
		<property name="recurrence" type="java.lang.Integer"/>
		<property name="since" type="timestamp"/>	
		<property name="until" type="timestamp"/>		
		<property name="who" type="java.lang.String" length="250"/>		
					
		<many-to-one name="location"
			class="bbr.b2b.regional.logistic.locations.entities.Location" column="LOCATION_ID" 
			not-null="false" />					
					
		<sql-query name="getResourceBlockingGroupsByDateAndLocation">
			<![CDATA[               
	           SELECT
					RBG.ID,
					RBG.COMMENT AS COMMENT,
					RBG.CREATED,
					RBG.REASON,
					RBG.RECURRENCE,  
					RBG.SINCE,
					RBG.UNTIL AS UNTIL,
					RBG.WHO,
					RBG.LOCATION_ID AS LOCATIONID 					
				FROM
					LOGISTICA.RESERVE RS JOIN 
					LOGISTICA.RESOURCEBLOCKING RB ON RS.ID = RB.ID JOIN 
					LOGISTICA.RESOURCEBLOCKINGGROUP RBG ON RBG.ID = RB.BLOCKINGGROUP_ID
				WHERE 
					RS.WHEN1 >= :since AND
					RS.WHEN1 < :until AND
      				RS.LOCATION_ID = :locationid 
				]]>
		</sql-query>		
	</class>
</hibernate-mapping>
