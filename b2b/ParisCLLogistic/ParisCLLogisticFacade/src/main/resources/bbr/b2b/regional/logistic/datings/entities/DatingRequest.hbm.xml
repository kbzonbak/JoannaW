<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>	
    <class name="bbr.b2b.regional.logistic.datings.entities.DatingRequest" table="DATINGREQUEST" 
    	entity-name="bbr.b2b.regional.logistic.datings.entities.DatingRequest" schema="LOGISTICA" >
        <id name="id" type="java.lang.Long">
            <column name="ID" />
            <generator class="identity">
				<param name="sequence">DATINGREQUEST_SEQUENCE</param>
				<param name="parameters">AS BIGINT CACHE 100</param>
			</generator>
        </id>
        <property name="number" type="java.lang.Long" not-null="true" ></property>
        <property name="when" type="timestamp" column="WHEN1"></property>
        <property name="requesteddate" type="timestamp"></property>
        <property name="estimatedboxes" type="java.lang.Integer"></property>
        <property name="estimatedpallets" type="java.lang.Integer"></property>
		<property name="trucks" type="java.lang.Integer"></property>
        <property name="requester" type="string"></property>
        <property name="email" type="string"></property>
        <property name="phone" type="string"></property>
        <property name="comment" type="string" column="COMMENT1"></property>
            
        <many-to-one name="delivery" 
        	class="bbr.b2b.regional.logistic.deliveries.entities.Delivery" 
        	column="DELIVERY_ID" 
        	not-null="true"/>
        	
        	<sql-query name="getExcelDatingRequest">
        	<![CDATA[	
        	SELECT 
					d.id,d.number as deliverynumber, v.tradename as vendortradename, dep.code as departmentcode, 
					dep.name as departmentname, dt.name as deliverytype, ft.name as flowtype, 
					to_char(dr.requesteddate,'DD-MM-YYYY HH24:mi') as request, to_char(dr.when1,'DD-MM-YYYY HH24:mi') as requestdate, 
					dr.trucks as trucksnumber, dr.estimatedboxes as estimatedboxes, dr.estimatedpallets as estimatedpallets, 
					o.number as ordernumber, l.code as locationcode, l.name as locationname, 
					i.internalcode as internalcode, vi.vendoritemcode as vendoritemcode, 
					i.name as itemname, odd.availableunits as availableunits,	
					case when dt.code='VEVCD' then o.requestnumber else null END as requestnumber, 
					case when dt.code='VEVCD' then to_char(o.valid,'DD-MM-YYYY') else null END as ordervalid
					
			FROM 
  						logistica.delivery  d
  			INNER JOIN 
  						logistica.vendor v on (d.vendor_id=v.id)  
  			INNER JOIN 
  						logistica.orderdelivery od  on (d.id=od.delivery_id)
  			INNER JOIN 
  						logistica.order o on (o.id=od.order_id)
  			INNER JOIN 
  						logistica.department dep on (dep.id=o.department_id)
  			INNER JOIN 
  						logistica.deliverytype dt on (dt.id=d.deliverytype_id)  
  			INNER JOIN 
  						logistica.flowtype ft on (ft.id=d.flowtype_id)    
			INNER JOIN 
						logistica.datingrequest dr on (d.id=dr.delivery_id)      
			INNER JOIN 
						logistica.orderdeliverydetail odd on (odd.delivery_id=d.id AND odd.order_id=o.id) 
			INNER JOIN 
						logistica.location l on (odd.location_id=l.id) 
			INNER JOIN 
						logistica.item i on (odd.item_id=i.id) 
			INNER JOIN 
						logistica.vendoritem vi on (vi.item_id=i.id and v.id=vi.vendor_id)

  			WHERE 
  						d.id in(:deliveryids)
			

        				
			]]>
		</sql-query>	
        	
		
    </class>
</hibernate-mapping>