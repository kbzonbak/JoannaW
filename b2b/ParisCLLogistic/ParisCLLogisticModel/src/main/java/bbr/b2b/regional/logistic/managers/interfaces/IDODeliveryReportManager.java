package bbr.b2b.regional.logistic.managers.interfaces;

import java.io.File;
import java.util.HashMap;
import java.util.List;

import bbr.b2b.common.adtclasses.classes.BaseResultDTO;
import bbr.b2b.common.adtclasses.classes.PageRangeDTO;
import bbr.b2b.common.adtclasses.exceptions.NotFoundException;
import bbr.b2b.common.adtclasses.exceptions.OperationFailedException;
import bbr.b2b.regional.logistic.couriers.data.wrappers.ChilexpressCourierStateTmpW;
import bbr.b2b.regional.logistic.couriers.data.wrappers.CourierTagW;
import bbr.b2b.regional.logistic.couriers.data.wrappers.CourierTicketDetailW;
import bbr.b2b.regional.logistic.couriers.data.wrappers.CourierW;
import bbr.b2b.regional.logistic.couriers.report.classes.ChileExpressTagResultDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.CorreosChileCSVResultDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.CourierExcelUploadDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.CourierInformationResultDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.CourierScheduleLogArrayResultDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.CourierScheduleLogInitParamDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.CourierStateFileDataDTO;
import bbr.b2b.regional.logistic.couriers.report.classes.RescheduleReasonArrayResultDTO;
import bbr.b2b.regional.logistic.deliveries.data.wrappers.DODeliveryDetailW;
import bbr.b2b.regional.logistic.deliveries.data.wrappers.DODeliveryStateTypeW;
import bbr.b2b.regional.logistic.deliveries.data.wrappers.DODeliveryW;
import bbr.b2b.regional.logistic.deliveries.report.classes.AddDODeliveryOfDirectOrdersInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.AddDODeliveryOfDirectOrdersResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.AddDODeliveryOfDirectOrdersWSInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.AddDODeliveryOfDirectOrdersWSResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.CourierFileReportInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.CourierFileReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.CourierStateReportInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.CourierStateReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliveryDetailReportInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliveryDetailReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliveryReportInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliveryReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliverySourceDataResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliveryStateTypeArrayResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DODeliveryWSRequestDataResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DeliveryCourierChilexpressInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DeliveryCourierCorreosDeChileInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DeliveryIdsByPagesW;
import bbr.b2b.regional.logistic.deliveries.report.classes.DoChangeDODeliveryStateTypeInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.DownloadDeliveryReportInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.ExcelDODeliveryReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.LabelDODeliveryReportInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.LabelDODeliveryReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.PDFDODeliveryDetailReportResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.PDFDODeliveryDetailReportResultListResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.ShippingCertificationArrayResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.ShippingCertificationInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UpdateDODeliveryDispatcherEmail;
import bbr.b2b.regional.logistic.deliveries.report.classes.UpdateDODeliveryWSInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UpdateDODeliveryWSResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UpdateDispatcherEmailResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UpdateUnitsOfDODeliveryDetailsInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UploadDODeliveryUpdatesInitParamDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UploadDODeliveryUpdatesResultDTO;
import bbr.b2b.regional.logistic.deliveries.report.classes.UploadDeliveryCourierInitParamDTO;
import bbr.b2b.regional.logistic.directorders.data.wrappers.DirectOrderDetailW;
import bbr.b2b.regional.logistic.directorders.data.wrappers.DirectOrderW;

public interface IDODeliveryReportManager {

	AddDODeliveryOfDirectOrdersResultDTO doAddDODeliveryOfDirectOrders(AddDODeliveryOfDirectOrdersInitParamDTO initParams, boolean byExcel);
	AddDODeliveryOfDirectOrdersWSResultDTO doAddDODeliveryOfDirectOrdersWS(AddDODeliveryOfDirectOrdersWSInitParamDTO initParams);
	UpdateDODeliveryWSResultDTO doUpdateDODeliveryWS(UpdateDODeliveryWSInitParamDTO initParams);
	DODeliveryReportResultDTO getDODeliveryReport(DODeliveryReportInitParamDTO initParamDTO, boolean byFilter);
	DODeliveryDetailReportResultDTO getDODeliveryDetailReport(DODeliveryDetailReportInitParamDTO initParams, boolean isByFilter);
	UpdateDispatcherEmailResultDTO doUpdateDispatcherEmail(UpdateDODeliveryDispatcherEmail initParamDTO);
	BaseResultDTO doUpdateAvailableUnitsOfDODeliveryDetails(UpdateUnitsOfDODeliveryDetailsInitParamDTO initParams);
	BaseResultDTO doUpdateReceivedUnitsOfDODeliveryDetails(UpdateUnitsOfDODeliveryDetailsInitParamDTO initParams);
	DODeliveryReportResultDTO doChangeDODeliveryStateType(DoChangeDODeliveryStateTypeInitParamDTO initParams);
	DODeliveryReportResultDTO doChangeDODeliveryStateType(DoChangeDODeliveryStateTypeInitParamDTO initParams, DODeliveryW dodelivery, boolean byFile);
	ExcelDODeliveryReportResultDTO getExcelDODeliveryReport(DownloadDeliveryReportInitParamDTO initParamW, boolean byPages);
	DeliveryIdsByPagesW getExcelDODeliveryReportByPages(DODeliveryReportInitParamDTO initParamDTO, PageRangeDTO[] pageranges);
	UploadDODeliveryUpdatesResultDTO doUploadDODeliveryUpdates(UploadDODeliveryUpdatesInitParamDTO initParams);
	LabelDODeliveryReportResultDTO getLabelDODeliveryReport(LabelDODeliveryReportInitParamDTO initParams);
	void doSendInt1879(DirectOrderW directorder, long deliverynumber, DODeliveryDetailW[] doddArr, DirectOrderDetailW[] directorderdetails, String tipo);
	void doSendInt1846(DirectOrderW directorder, DODeliveryW dodelivery, DODeliveryDetailW[] doddArr, DirectOrderDetailW[] details, String tipo);
	DODeliveryStateTypeArrayResultDTO getDoDeliveryStateType() throws NotFoundException, OperationFailedException;
	PDFDODeliveryDetailReportResultListResultDTO getPDFDODeliveryReportByIDs(DODeliveryReportInitParamDTO initParamDTO);
	PDFDODeliveryDetailReportResultDTO getPDFDODeliveryReport(DODeliveryReportInitParamDTO initParamDTO);
	boolean doCourierTicketDetailWS(Long ticketNumber, CourierW courier, CourierTicketDetailW courierTicketDetail, HashMap<String, DODeliveryStateTypeW> dodstMap);
	DODeliveryWSRequestDataResultDTO deliveryCourierChileExpress(DeliveryCourierChilexpressInitParamDTO initParamDTO);
	BaseResultDTO courierChileExpressWS(DODeliveryW dodeliveryW, CourierW courier, String fullusername);
	DODeliveryWSRequestDataResultDTO deliveryCourierCorreosDeChile(DeliveryCourierCorreosDeChileInitParamDTO initParamDTO);
	BaseResultDTO courierCorreosDeChileWS(DODeliveryW dodeliveryW, CourierW courier, String fullusername);
	ChileExpressTagResultDTO getDoDeliveryChileExpressReport(Long dodeliveryid, String vendorcode) throws OperationFailedException, NotFoundException;
	CourierInformationResultDTO getCourierInformationByDODelivery(Long dodeliveryid);
	CorreosChileCSVResultDTO getCorreosChileTagInformation(Long dodeliveryid, String vendorcode);
	ShippingCertificationArrayResultDTO getShippingCertificationReport(ShippingCertificationInitParamDTO initParamDTO);
	String doValidateCourierDelivery(CourierExcelUploadDTO initParamDTO, String vendorcode);
	DODeliveryWSRequestDataResultDTO doSaveCouriersExcel(UploadDeliveryCourierInitParamDTO initParamDTO);
	CourierStateReportResultDTO getCourierStateReport(CourierStateReportInitParamDTO initparam);
	CourierFileReportResultDTO getCourierFileReport(CourierFileReportInitParamDTO initParamDTO, boolean byPages, boolean byFilter);
	DODeliverySourceDataResultDTO getDODeliverySourceData(DownloadDeliveryReportInitParamDTO initParamW, boolean byPages);
	boolean doUploadChilexpressFile(File file);
	boolean doValidateChilexpressStateByFile(ChilexpressCourierStateTmpW state, HashMap<Long, DirectOrderW> doMap, HashMap<Long, DODeliveryW> dMap, HashMap<Long, CourierTagW> dctMap, HashMap<String, DODeliveryStateTypeW> dodstMap, List<Long> toDeleteStates);
	boolean doUploadChilexpressStateByFile(CourierStateFileDataDTO courierstatefiledata, Long directorderid, HashMap<String, DODeliveryStateTypeW> dodstMap);
	RescheduleReasonArrayResultDTO getShowableRescheduleReasons();
	CourierScheduleLogArrayResultDTO getCourierScheduleLogByDODelivery(CourierScheduleLogInitParamDTO initParamDTO);
}
